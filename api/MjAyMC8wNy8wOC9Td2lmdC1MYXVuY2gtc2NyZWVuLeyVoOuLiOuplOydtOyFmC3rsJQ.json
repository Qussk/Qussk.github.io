{"title":"[Swift]Launch screen 애니메이션 바(CAGradientLayer)","date":"2020-07-08T10:12:03.000Z","date_formatted":{"ll":"Jul 8, 2020","L":"07/08/2020","MM-DD":"07-08"},"thumbnail":"/image/grad.png","link":"2020/07/08/Swift-Launch-screen-애니메이션-바","tags":["CAGradientLayer","Launch Screen","Swift","animation"],"categories":["ios"],"updated":"2020-08-20T01:08:23.376Z","content":"<p>프로젝트중 LaunchScreen이 필요 했는데,</p>\n<p>스토리보드로 해야할 것 처럼 생겼고,</p>\n<p>swift 파일 만들어서 @IBOulet연결 해도 코드가 적용안되는 모습이고,</p>\n<p>알아보니,</p>\n<p>Xcode에서 지원하는 LaunchScreen을 쓰기보다 보통  ViewController을 이용하여 LaunchScreen을 직접 만들어 쓴다고 한다!</p>\n<p>🤔</p>\n<p>그래서 vc를 만들고</p>\n<p>animation을 주면 좋을 것 같아 찾아 보았다!</p>\n<p><a href=\"https://m.blog.naver.com/hjloveu012/221586596920\" target=\"_blank\">[참고한 사이트 - 왕복바]</a></p>\n<p>위 사이트에서는 왕복으로 왔다갔다하는 바지만,</p>\n<p>나는 로딩이 되는 것처럼 보이기 위해 한 방향으로만 가도록 고쳤다 ㅎㅎ !</p>\n<h3 id=\"horizontalmarqueeview.swift\">HorizontalMarqueeView.swift<a title=\"#horizontalmarqueeview.swift\" href=\"#horizontalmarqueeview.swift\"></a></h3>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HorizontalMarqueeView</span>: <span class=\"title\">UIView</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">var</span> barView: <span class=\"type\">UIView!</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> backgroundGradientLayer: <span class=\"type\">CAGradientLayer!</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">var</span> grdientDelay: <span class=\"type\">CFTimeInterval</span> = <span class=\"number\">0.7</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> grdientDuration: <span class=\"type\">CFTimeInterval</span> = <span class=\"number\">0.3</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> moveDelay: <span class=\"type\">TimeInterval</span> = <span class=\"number\">0.3</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> moveDuration: <span class=\"type\">TimeInterval</span> = <span class=\"number\">1</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">initBar</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">self</span>.clipsToBounds = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">self</span>.backgroundColor = <span class=\"type\">UIColor</span>.clear</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> barW = <span class=\"keyword\">self</span>.frame.size.width / <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> barH = <span class=\"keyword\">self</span>.frame.size.height</span><br><span class=\"line\">    </span><br><span class=\"line\">    barView = <span class=\"type\">UIView</span>.<span class=\"keyword\">init</span>(frame: <span class=\"type\">CGRect</span>.<span class=\"keyword\">init</span>(x: <span class=\"keyword\">self</span>.frame.size.width, y: <span class=\"number\">0</span>, width: barW, height: barH))</span><br><span class=\"line\">    barView.backgroundColor = <span class=\"type\">UIColor</span>.clear</span><br><span class=\"line\">    <span class=\"keyword\">self</span>.addSubview(barView)</span><br><span class=\"line\">    </span><br><span class=\"line\">    backgroundGradientLayer = <span class=\"type\">CAGradientLayer</span>()</span><br><span class=\"line\">    backgroundGradientLayer.frame = barView.bounds</span><br><span class=\"line\">    backgroundGradientLayer.startPoint = <span class=\"type\">CGPoint</span>.<span class=\"keyword\">init</span>(x: <span class=\"number\">0.0</span>, y: <span class=\"number\">0.5</span>)</span><br><span class=\"line\">    backgroundGradientLayer.endPoint = <span class=\"type\">CGPoint</span>.<span class=\"keyword\">init</span>(x: <span class=\"number\">1.0</span>, y: <span class=\"number\">0.5</span>)</span><br><span class=\"line\">    <span class=\"comment\">//166, 177, 225</span></span><br><span class=\"line\">    backgroundGradientLayer.colors = [<span class=\"type\">UIColor</span>(red: <span class=\"number\">166</span>/<span class=\"number\">255</span>, green: <span class=\"number\">177</span>/<span class=\"number\">255</span>, blue: <span class=\"number\">225</span>/<span class=\"number\">255</span>, alpha: <span class=\"number\">1</span>).cgColor, <span class=\"type\">UIColor</span>.clear.cgColor]</span><br><span class=\"line\">    backgroundGradientLayer.locations = [<span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>]</span><br><span class=\"line\">    barView.layer.addSublayer(backgroundGradientLayer)</span><br><span class=\"line\">    </span><br><span class=\"line\">    moveBarToLeft()</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">moveBarToLeft</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.reset</span></span><br><span class=\"line\">    barView.frame = <span class=\"type\">CGRect</span>.<span class=\"keyword\">init</span>(x: <span class=\"keyword\">self</span>.frame.size.width, y: <span class=\"number\">0</span>, width: barView.frame.size.width, height: barView.frame.size.height)</span><br><span class=\"line\">    backgroundGradientLayer.colors = [<span class=\"type\">UIColor</span>(red: <span class=\"number\">166</span>/<span class=\"number\">255</span>, green: <span class=\"number\">177</span>/<span class=\"number\">255</span>, blue: <span class=\"number\">225</span>/<span class=\"number\">255</span>, alpha: <span class=\"number\">1</span>).cgColor, <span class=\"type\">UIColor</span>.clear.cgColor]</span><br><span class=\"line\">    backgroundGradientLayer.locations = [<span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 2.anim gradient</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> gradientChangeLocation = <span class=\"type\">CABasicAnimation</span>(keyPath: <span class=\"string\">\"locations\"</span>)</span><br><span class=\"line\">    gradientChangeLocation.beginTime = <span class=\"type\">CACurrentMediaTime</span>() + grdientDelay</span><br><span class=\"line\">    gradientChangeLocation.duration = grdientDuration</span><br><span class=\"line\">    gradientChangeLocation.toValue = [-<span class=\"number\">1.0</span>, <span class=\"number\">1.0</span>]</span><br><span class=\"line\">    gradientChangeLocation.fillMode = <span class=\"type\">CAMediaTimingFillMode</span>.forwards</span><br><span class=\"line\">    gradientChangeLocation.isRemovedOnCompletion = <span class=\"literal\">false</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">self</span>.backgroundGradientLayer.add(gradientChangeLocation, forKey: <span class=\"string\">\"locationsChange\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 3. anim move</span></span><br><span class=\"line\">    <span class=\"type\">UIView</span>.animate(withDuration: moveDuration, delay: moveDelay, options: <span class=\"type\">UIView</span>.<span class=\"type\">AnimationOptions</span>.curveLinear, animations: &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">self</span>.barView.frame = <span class=\"type\">CGRect</span>.<span class=\"keyword\">init</span>(x: -<span class=\"keyword\">self</span>.barView.frame.size.width, y: <span class=\"number\">0</span>, width: <span class=\"keyword\">self</span>.barView.frame.size.width, height: <span class=\"keyword\">self</span>.barView.frame.size.height)</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;) &#123; (isFinish) <span class=\"keyword\">in</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">self</span>.moveBarToLeft()</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>1. reset</strong></p>\n<ul>\n<li>바 뷰 부분에 <strong>CAGradientLayer</strong>를 이용하였다. background color위에 color gradient를 그려서 layer의 shape을 채우는 layer라고 생각하면 될 듯.</li>\n<li>startPoint와 endPoint 는 view위에 그려질 그라데이션의 시작과 끝점.</li>\n<li><strong>backgroundGradientLayer</strong> 은 그라데이션의 비율. 기본적으로 [1,0]이 1:1 모습.<br>\n<strong>2. anim gradient</strong></li>\n<li>anim gradient의 부분은 CABasicAnimation을 이용하여 그라데이션 주는 부분.</li>\n<li>gradientChangeLocation의 시작 시간(beginTime)은 CACurrentMediaTime(현재 절대 시간을 초 단위로 반환) + grdientDelay이다. let grdientDelay = 0.7</li>\n<li>coloer는 커스텀 하여 사용<br>\n<strong>3. anim move</strong></li>\n<li>일반적인 animation을 사용</li>\n</ul>\n<p>CAGradientLayer에 대한 자세한 내용은 아래의 블로그를 참고하면 된다!</p>\n<p>(매우 쉽게 설명 되어있음!)</p>\n<p><a href=\"https://zeddios.tistory.com/948\" target=\"_blank\">CAGradientLayer 참고 - Zedd 블로그</a></p>\n<h3 id=\"launch-screen-vc에-horizontalmarqueeview코드-넣어-주기.\">Launch Screen VC에 HorizontalMarqueeView코드 넣어 주기.<a title=\"#launch-screen-vc에-horizontalmarqueeview코드-넣어-주기.\" href=\"#launch-screen-vc에-horizontalmarqueeview코드-넣어-주기.\"></a></h3>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewController</span>: <span class=\"title\">UIViewController</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">var</span> marqueeView: <span class=\"type\">HorizontalMarqueeView!</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">let</span> timerArr : [<span class=\"type\">IndexPath</span>] = []</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewDidLoad</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.viewDidLoad()</span><br><span class=\"line\">    view.backgroundColor = .white</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    marqueeView = <span class=\"type\">HorizontalMarqueeView</span>.<span class=\"keyword\">init</span>(frame: <span class=\"type\">CGRect</span>.<span class=\"keyword\">init</span>(x: <span class=\"type\">UIScreen</span>.main.bounds.size.width/<span class=\"number\">10</span>, y: <span class=\"number\">400</span>, width: <span class=\"type\">UIScreen</span>.main.bounds.size.width/<span class=\"number\">1.2</span>, height: <span class=\"number\">5</span>))</span><br><span class=\"line\">    <span class=\"keyword\">self</span>.view.addSubview(marqueeView)</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"type\">DispatchQueue</span>.main.asyncAfter(deadline: .now() + <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">let</span> startVC = <span class=\"type\">StartViewController</span>()</span><br><span class=\"line\">        startVC.delegate = <span class=\"keyword\">self</span></span><br><span class=\"line\">        startVC.modalPresentationStyle = .fullScreen</span><br><span class=\"line\">        <span class=\"keyword\">self</span>.present(startVC, animated: <span class=\"literal\">true</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">    marqueeView.initBar()</span><br><span class=\"line\">    setupLaunchImage()</span><br><span class=\"line\">  </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">setupLaunchImage</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> launchImage = <span class=\"type\">UIImageView</span>()</span><br><span class=\"line\">    launchImage.image = <span class=\"type\">UIImage</span>(named: <span class=\"string\">\"Dadam4\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    view.addSubview(launchImage)</span><br><span class=\"line\">    </span><br><span class=\"line\">    launchImage.translatesAutoresizingMaskIntoConstraints = <span class=\"literal\">false</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    launchImage.topAnchor.constraint(equalTo: view.topAnchor, constant: view.frame.width/<span class=\"number\">2.8</span>).isActive = <span class=\"literal\">true</span></span><br><span class=\"line\">    launchImage.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: view.frame.width/<span class=\"number\">3</span>).isActive = <span class=\"literal\">true</span></span><br><span class=\"line\">    launchImage.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -(view.frame.width/<span class=\"number\">3</span>)).isActive = <span class=\"literal\">true</span></span><br><span class=\"line\">    launchImage.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: -(view.frame.width/<span class=\"number\">0.7</span>)).isActive = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">ViewController</span>: <span class=\"title\">StartViewControllerDelegate</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">handleDismiss</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"type\">MainVC</span> = <span class=\"type\">MainViewController</span>()</span><br><span class=\"line\">  <span class=\"comment\">//  let navi = UINavigationController(rootViewController: MainVC)</span></span><br><span class=\"line\">    <span class=\"type\">MainVC</span>.modalPresentationStyle = .fullScreen</span><br><span class=\"line\">    <span class=\"keyword\">self</span>.present(<span class=\"type\">MainVC</span>, animated: <span class=\"literal\">false</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>DispatchQueue.main.asyncAfter(deadline: .now() + 3) {</strong> 을 이용하여, 해당 Launch화면이 main으로부터 3초뒤에 종료되도록 하였다.</li>\n</ul>\n<h3 id=\"완성된-모습\">완성된 모습<a title=\"#완성된-모습\" href=\"#완성된-모습\"></a></h3>\n<p><a href=\"https://www.youtube.com/watch?v=f2uHaIQeQYw&amp;lc=UgzvZkYN3GBFMesltn94AaABAg\" target=\"_blank\">[영상보기]</a></p>\n","prev":{"title":"[Swift]Text 줄바꿈(n,t,r)","link":"2020/07/08/Swift-Text-줄바꿈-n-t-r"},"next":{"title":"[Swift]Cell에 shadow주기","link":"2020/07/08/Swift-Cell에-shadow주기"},"plink":"https://Qussk.github.io/2020/07/08/Swift-Launch-screen-애니메이션-바/","toc":[{"id":"horizontalmarqueeview.swift","title":"HorizontalMarqueeView.swift","index":"1"},{"id":"launch-screen-vc에-horizontalmarqueeview코드-넣어-주기.","title":"Launch Screen VC에 HorizontalMarqueeView코드 넣어 주기.","index":"2"},{"id":"완성된-모습","title":"완성된 모습","index":"3"}]}