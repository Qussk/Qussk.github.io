{"title":"[Swift]UserDefault- get,set,remove","date":"2021-02-27T18:18:34.000Z","date_formatted":{"ll":"Feb 27, 2021","L":"02/27/2021","MM-DD":"02-27"},"link":"2021/02/27/swift-UserDefault","tags":["Global","Swift","UserDefault"],"categories":["ios"],"updated":"2021-02-27T10:10:34.423Z","content":"<h1 id=\"userdefaults란?\">UserDefaults란?<a title=\"#userdefaults란?\" href=\"#userdefaults란?\"></a></h1>\n<ul>\n<li>자신의 디바이스에 임시로 데이터(값)를 저장해 놓는 공간</li>\n<li>사용목적 : 앱이 종료되어도 지정된 값으로 저장되어 있기 위해. (오직 삭제된 경우에만 초기화)</li>\n<li>사용방법 : key값과 value값을 저장(:set)하고 앱에서 필요할 때 (:get)key값으로 불러 value를 사용할 수 있음.</li>\n</ul>\n<p><a href=\"https://developer.apple.com/documentation/foundation/userdefaults\" target=\"_blank\">https://developer.apple.com/documentation/foundation/userdefaults</a></p>\n<h2 id=\"1)-set(값-저장)\">1) set(값 저장)<a title=\"#1)-set(값-저장)\" href=\"#1)-set(값-저장)\"></a></h2>\n<ul>\n<li>기본형</li>\n</ul>\n<p><code>UserDefaults.standard.setValue(&quot;value&quot;, forkey: &quot;key&quot;)</code></p>\n<ol>\n<li>내가 저장하고 싶은 값 ⇒ <code>&quot;value&quot;</code></li>\n<li>내가 저장한 값을 부를 때 쓸 key ⇒ <code>&quot;key&quot;</code></li>\n<li><code>&quot;value&quot;</code>는 string,Int,Bool…등 타입지정이 가능하고, <code>&quot;key&quot;</code>는 무조건 String으로 써주면 된다.</li>\n</ol>\n<ul>\n<li>예시</li>\n</ul>\n<p>이메일 값 save</p>\n<p><code>UserDefaults.standard.setValue(email, forKey: &quot;email_ud&quot;)  // save email</code></p>\n<p>(다양한 타입으로 가능)</p>\n<p>예를들면, 로그인 버튼 Action에 이런 식으로 set 가능</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UserDefaults</span>.standard.setValue(email, forKey: <span class=\"string\">\"email_ud\"</span>)  <span class=\"comment\">// save email</span></span><br><span class=\"line\"><span class=\"type\">UserDefaults</span>.standard.setValue(pin, forKey: <span class=\"string\">\"pin_ud\"</span>)      <span class=\"comment\">// save pin</span></span><br><span class=\"line\"><span class=\"type\">UserDefaults</span>.standard.setValue(<span class=\"literal\">true</span>, forKey: <span class=\"string\">\"isPin\"</span>)      <span class=\"comment\">// save ispin</span></span><br><span class=\"line\"><span class=\"type\">UserDefaults</span>.standard.setValue(crypSHA256, forKey: <span class=\"string\">\"pw\"</span>)   <span class=\"comment\">// save pw</span></span><br></pre></td></tr></table></figure>\n<p>🔖 주의</p>\n<p>set만으로도 저장이 안될때가 있다, 그럴땐 set시점에 아래의 코드도 추가해 넣는다.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UserDefaults</span>.standard.synchronize()     <span class=\"comment\">//하드에 넣기</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://developer.apple.com/documentation/foundation/userdefaults/1414005-synchronize\" target=\"_blank\">https://developer.apple.com/documentation/foundation/userdefaults/1414005-synchronize</a></p>\n<h2 id=\"2)-get(값-부르기)\">2) get(값 부르기)<a title=\"#2)-get(값-부르기)\" href=\"#2)-get(값-부르기)\"></a></h2>\n<ul>\n<li>기본형</li>\n</ul>\n<p><code>UserDefaults.standard.value(forkey: &quot;key&quot;)</code></p>\n<ol>\n<li>set으로 저장되어 있을 값 &quot;key&quot;로 부르기 ⇒ <code>&quot;key&quot;</code></li>\n</ol>\n<ul>\n<li>예시</li>\n</ul>\n<p><code>let email_ud = UserDefaults.standard.value(forKey: &quot;email_ud&quot;) as? String</code></p>\n<p>예를들면, 로그인화면에서 유저가 자동저장을 클릭한 후 앱을 종료했다면, textfield에 email_ud값이 그대로 저장되도록 요청.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//자동저장</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> email_ud = <span class=\"type\">UserDefaults</span>.standard.value(forKey: <span class=\"string\">\"email_ud\"</span>) <span class=\"keyword\">as</span>? <span class=\"type\">String</span></span><br><span class=\"line\">emailTF.text = email_ud</span><br></pre></td></tr></table></figure>\n<h2 id=\"3)-remove(값-삭제)\">3) remove(값 삭제)<a title=\"#3)-remove(값-삭제)\" href=\"#3)-remove(값-삭제)\"></a></h2>\n<ul>\n<li>기본형</li>\n</ul>\n<p><code>UserDefaults.standard.removeObject(forKey: &quot;key&quot;)</code></p>\n<ol>\n<li>set으로 저장되어 있을 값 &quot;key&quot;로 지우기 ⇒ <code>&quot;key&quot;</code></li>\n</ol>\n<ul>\n<li>예시</li>\n</ul>\n<p><code>UserDefaults.standard.removeObject(forKey: &quot;email_ud&quot;)</code></p>\n<p>예를들면, 사용자가 로그아웃, 회원탈퇴 등의 이유로 데이터를 제거해야할 때 사용한다.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UserDefaults</span>.standard.removeObject(forKey: <span class=\"string\">\"email_ud\"</span>) <span class=\"comment\">//제거</span></span><br><span class=\"line\"><span class=\"type\">UserDefaults</span>.standard.setValue(<span class=\"literal\">false</span>, forKey: <span class=\"string\">\"isPin\"</span>) <span class=\"comment\">//핀 없음처리</span></span><br></pre></td></tr></table></figure>\n<p>&quot;isPin&quot;은 자동로그인을 위한 값이므로 값을 삭제하기보다 값을 변경하여,</p>\n<p>rootView 변경에 대한 분기처리시 이용한다.</p>\n<h2 id=\"심화)-global로-이용\">심화) Global로 이용<a title=\"#심화)-global로-이용\" href=\"#심화)-global로-이용\"></a></h2>\n<h3 id=\"uiapplicationdelegate\"><strong>UIApplicationDelegate</strong><a title=\"#uiapplicationdelegate\" href=\"#uiapplicationdelegate\"></a></h3>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> dic = [<span class=\"string\">\"email_ud\"</span>:<span class=\"string\">\"\"</span>,<span class=\"string\">\"pin_ud\"</span>:<span class=\"string\">\"\"</span>, <span class=\"string\">\"isPin\"</span>:<span class=\"literal\">false</span>, <span class=\"string\">\"isMember\"</span>:<span class=\"literal\">false</span>, <span class=\"string\">\"pw\"</span>:<span class=\"string\">\"\"</span>] <span class=\"keyword\">as</span> [<span class=\"type\">String</span> : <span class=\"type\">Any</span>]</span><br><span class=\"line\">    <span class=\"type\">UserDefaults</span>.standard.register(defaults: dic) <span class=\"comment\">//저장</span></span><br></pre></td></tr></table></figure>\n<p>특정 화면에 가서 get, set을 해주는 것 외에 앱을 켜자마자 디폴트로 저장하고 싶은 값이 있다면, 앱 실행 가장 첫 시작점인 UIApplicationDelegate에서 위 코드로 글로벌하게 저장할 수 있다. 초기값을 지정해 놓는 것이라고도 생각해도 된다 !</p>\n","next":{"title":"[Swift] UIView - 점선넣기","link":"2021/02/01/Swift-uiview-점선넣기"},"plink":"https://Qussk.github.io/2021/02/27/swift-UserDefault/","toc":[{"id":"userdefaults란?","title":"UserDefaults란?","index":"1","children":[{"id":"1)-set(값-저장)","title":"1) set(값 저장)","index":"1.1"},{"id":"2)-get(값-부르기)","title":"2) get(값 부르기)","index":"1.2"},{"id":"3)-remove(값-삭제)","title":"3) remove(값 삭제)","index":"1.3"},{"id":"심화)-global로-이용","title":"심화) Global로 이용","index":"1.4","children":[{"id":"uiapplicationdelegate","title":"UIApplicationDelegate","index":"1.4.1"}]}]}]}