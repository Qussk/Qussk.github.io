{"title":"[Swift]스토리보드에서 Segue이해하기","date":"2020-05-08T11:30:08.000Z","date_formatted":{"ll":"May 8, 2020","L":"05/08/2020","MM-DD":"05-08"},"thumbnail":"/image/segue-6.png","link":"2020/05/08/Swift-스토리보드에서-Segue이해하기","tags":["Segue","Swift","present","화면전환"],"categories":["ios"],"updated":"2020-09-14T08:28:54.142Z","content":"<p>앱개발하다보면 필수적으로 [화면전환]에 대한 문제를 맞딱드리게 된다…</p>\n<p>그래서 막상 코드로 구현하다 보면…</p>\n<p>생각보다(?:0) 어렵다… 쉬운듯 어렵고, 심플한듯 복잡한…</p>\n<p>사용할 땐 화면에 대한 생각전혀 해보지 못하고 슉슉 넘겨댔는데…</p>\n<p>구현하는 건 왜케 어려워… 할 수도 있다. <s>실제로 나도 그랬으니까.</s></p>\n<p>그리고 그게 풀리지 않을때는 구글링해보다가…</p>\n<p>어라 ? 모야모야 스토리보드에서 쉽게 화면전환 할 수 있잖아~~~?? 라고 생각하고 <s>그게 나와 세그웨이의 첫만남…</s></p>\n<p>세그웨이를 ㅍㅍ검색하시는 분들도 있겠지…  <s>나야나</s></p>\n<p><s>근데 막상 세그웨이 글 봐도 원하는게 안돼서 그냥 코드로 했었음ㅋㅋ…ㅠㅠ</s></p>\n<p>그래서 나와 비슷한 경험을 하시는(?) 분들을 위해 세그웨이에 대한 정보를 정말 간단하게 정리해보았다.</p>\n<h2 id=\"세그웨이-이해\">세그웨이 이해<a title=\"#세그웨이-이해\" href=\"#세그웨이-이해\"></a></h2>\n<p>한쪽 방향으로만 흐르는 [화면전환]으로, 출발지와 목적지의 특성을 갖는다.</p>\n<p>대충 이렇게 생각하면 쉬울 것 같다. (이게 다니까…)</p>\n<h2 id=\"세그웨이의-특징\">세그웨이의 특징<a title=\"#세그웨이의-특징\" href=\"#세그웨이의-특징\"></a></h2>\n<ul>\n<li>\n<p>스토리 보드로 쉽게 구현이 가능하다.</p>\n</li>\n<li>\n<p>소스코드를 이용해서 화면 전환을 처리를 하려면 대상이 되는 뷰 컨트롤러의 정보를 읽어와 직접 인스턴스화 한 후에 화면을 전환해야 하지만, 세그웨이를 이용하면 뷰 컨트롤러에 대한 정보가 없어도 된다. (세그웨이가 스토리보드상의 연결 정보를 이용하여 대상 뷰 컨트롤러의 인스턴스를 자동으로 만들어 주기 때문)</p>\n</li>\n</ul>\n<h2 id=\"세그웨이의-장단점\">세그웨이의 장단점<a title=\"#세그웨이의-장단점\" href=\"#세그웨이의-장단점\"></a></h2>\n<p><strong>장점</strong></p>\n<ul>\n<li>구현이 쉽다.</li>\n<li>화면과 화면을 연결하기 위해 아무런 소스 코드도 필요로 하지 않는다</li>\n</ul>\n<p><strong>단점</strong></p>\n<ul>\n<li>일괄적으로 적용되는 것이라 특정 상황에 대응하기 어렵다.</li>\n</ul>\n<p>알다시피, 모든 개념에는 좋고 안좋고 보다, 각자의 상황에 알맞게 사용하는 게 중요하다는 점을 꼭 기억하자 !</p>\n<h2 id=\"세그웨이-종류\">세그웨이 종류<a title=\"#세그웨이-종류\" href=\"#세그웨이-종류\"></a></h2>\n<p>세그웨이의 종류는 2가지가 있다. &quot;액션 세그웨이(Action Segue == Trigger Segue)&quot;와 &quot;메뉴얼 세그웨이(Manual Segue)&quot;가 있는데, 쉽게 구분하자면 아래를 보자.</p>\n<ul>\n<li>액션 세그웨이(Action Segue  :  버튼(출발지) - 뷰컨트롤러(목적지)</li>\n<li>메뉴얼 세그웨이(Manual Segue)  :  뷰컨트롤러(출발지)  ~</li>\n</ul>\n<p>액션 세그웨이는 버튼의 터치 이벤트가 세그웨이로 실행으로 바로 연결되므로, 소스 코드를 추가하지 않아도 화면 전환 기능을 구현하지만,</p>\n<p>매뉴얼 세그웨이는 UIKit 프레임워크에 정의된 performSegue(withIdentifier : sender) 메소드를 사용하기 때문에 원활한 사용을 위해 별도의 Identifier를 지정해줘야한다. ( 이것에 대한 내용은 이후 구현 포스팅에서 참고하자)</p>\n<h2 id=\"1.-세그웨이-활용\">1. 세그웨이 활용<a title=\"#1.-세그웨이-활용\" href=\"#1.-세그웨이-활용\"></a></h2>\n<p>일단 글만보면 이해가 안되므로 아래 이미지를 보자.</p>\n<p>(예시는 액션세그웨이로 진행하였다.)</p>\n<p><img src=\"/image/segue-1.png\" alt=\"이미지\" class=\"φcx\"></p>\n<p>1-1. 이미지와 같이 뷰컨트롤러를 2개 만들고 A ViewController에 Button을 하나 추가한다.<br>\n1-2. 스토리보드상의 Button을 control을 누른 채 다음으로 보여줄 화면(목적지화면)으로 드래그 하여 커서를 놓는다.<br>\n1-3. 그럼 검정색 작은 메뉴얼이 뜨는데 여기서 show로 해줄지, PresentModally로 해줄지 선택한다.<br>\n(show는 단순화면 전환시, PresentModally 화면전환시 부가 기능 추가)<br>\n1-4. 생성된 sege줄을 클릭하면 (위 이미지)1-3에 대한 변경이 가능하니 참고하자.</p>\n<p><img src=\"/image/segue-2.png\" alt=\"이미지\" class=\"φcx\"></p>\n<p>1-5. PresentModally로 선택시 present Stly 변경이 가능하다.<br>\n(Automatic은 일반 present 스타일로 위에서 아래로 나오는 카드형. FullScreen은 풀화면형.)</p>\n<p>위를 적용시 빌드를 하면, 버튼을 누를 때 목적지화면으로 전환되는 모습을 볼 수 있다.</p>\n<p>다만, 그 화면에서는 이제 아무것도 할 수가 없다.</p>\n<p>왜냐하면 정말 뷰만 이어 놓았기 때문에…</p>\n<p>(뒤로갈 수 있는 버튼도 없고, 네비게이션 바가 있는 것도 아니고…)</p>\n<h2 id=\"2.-exit\">2. Exit<a title=\"#2.-exit\" href=\"#2.-exit\"></a></h2>\n<p>그래서 당황한 나머지? 이런 실수를 할 수 있다.</p>\n<p>&quot;1.에서 한 방법처럼 또 show!로 세그웨이 연결해주면 되지 !!! &quot;</p>\n<p>하고 아래의 이미지와 같이 행동했다면…</p>\n<p><img src=\"/image/segue-4.png\" alt=\"이미지\" class=\"φcx\"></p>\n<p>아주 이상한 경험을 할 수 있다.</p>\n<p>그러니까,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A -&gt; B </span><br><span class=\"line\">B &lt;- A</span><br></pre></td></tr></table></figure>\n<p>의 형태로 화면전환이 되는 것이 아니라,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A -&gt; B -&gt; A -&gt; B -&gt; A -&gt; B -&gt; A -&gt; B -&gt; A -&gt; B ...(무한)</span><br></pre></td></tr></table></figure>\n<p>이런 형태로 화면이 계속 생성되서…</p>\n<p><img src=\"/image/segue-5.png\" alt=\"이미지\" class=\"φcx\"></p>\n<p>이런 몹쓸 형태의 구조가 된다.</p>\n<p>세그웨이는 목적지가 되는 뷰 컨트롤러의 인스턴스를 자동으로 생성하기때문에,<br>\n역방향의 세그웨이를 다시 생성한다는 것은 이미 존재하는 뷰 컨트롤러의 인스턴스를 또 다시 만들어 낸다는 의미이다. 그러면 동일한 뷰 컨트롤러가 중복되는 것.</p>\n<p>이러면 앱을 사용할 수 없다. (오류가 날 수 있음)</p>\n<p>그래서 우리는 [화면복귀]라는 개념을 알아야한다.</p>\n<p>화면 복귀하는 법은 아주 간단하다. unwindow개념을 사용하면 된다.</p>\n<p>새로운 화면으로 전환하는 것을 Wind 라고 한다면 Unwind는 Wind 작업을 해제한다는 의미라고 볼 수 있다.</p>\n<p>2-1. unwind 코드 불러오기.</p>\n<p><img src=\"/image/unwind.png\" alt=\"이미지\" class=\"φcx\"></p>\n<p>2-2. unwind에 복귀할 화면(ViewController)으로 고쳐쓰기.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@IBAction func unwindToAViewController(_ unwindSegue: UIStoryboardSegue) &#123;</span><br><span class=\"line\">   let sourceViewController &#x3D; unwindSegue.source</span><br><span class=\"line\">   </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>A -&gt; B</p>\n<p>AViewController에서 BViewController로 이동하는 화면이었다면, B에서 다시 A로 복귀해야하므로, AViewController에 해당 코드를 입력함.</p>\n<p>2-3. Exit 달기.</p>\n<p><img src=\"/image/segue-6.png\" alt=\"이미지\" class=\"φcx\"></p>\n<p>BViewController에서 버튼을 드래그 하고 &quot;도크(노란색)&quot;버튼 에서 맨뒤에 있는 Exit단추에 놓아주면<br>\n2-2에서 만들었던 목록이 아래에 뜨고 돌아갈 화면의 ViewController이름을 선택하면 된다.</p>\n<p>해당화면(BViewController)에서 버튼을 누르면 다시 이전화면(AViewController)으로 복귀할 수 있도록 …</p>\n<p>그럼 ? present가 계속 생성되는 것이 아닌, 이전화면으로 깔끔하게 돌아가는 모습을 볼 수 있다.</p>\n<p>👏🏻👏🏻👏🏻 🤠</p>\n<p>세그웨이에 대한 자세한 활용은 다음 포스트에 남길 계획이다.</p>\n","prev":{"title":"[라이브러리]SideMenu사용하기","link":"2020/05/12/라이브러리-SiedMenu사용법"},"next":{"title":"[Swift] Segue(세그웨이)를 이용한 화면전환","link":"2020/05/08/Swift-Segue-세그웨이-를-이용한-화면전환"},"plink":"https://Qussk.github.io/2020/05/08/Swift-스토리보드에서-Segue이해하기/","toc":[{"id":"세그웨이-이해","title":"세그웨이 이해","index":"1"},{"id":"세그웨이의-특징","title":"세그웨이의 특징","index":"2"},{"id":"세그웨이의-장단점","title":"세그웨이의 장단점","index":"3"},{"id":"세그웨이-종류","title":"세그웨이 종류","index":"4"},{"id":"1.-세그웨이-활용","title":"1. 세그웨이 활용","index":"5"},{"id":"2.-exit","title":"2. Exit","index":"6"}]}