{"title":"[Swift]UITest 진행","date":"2020-08-12T16:12:49.000Z","date_formatted":{"ll":"Aug 12, 2020","L":"08/12/2020","MM-DD":"08-12"},"link":"2020/08/12/Swift-UITest-진행","tags":["Swift","UITest"],"categories":["ios"],"updated":"2020-09-14T08:28:54.135Z","content":"<p>나중에 다듬으기루…</p>\n<h2 id=\"시작하기\">시작하기<a title=\"#시작하기\" href=\"#시작하기\"></a></h2>\n<p><img src=\"/image/uitest1.png\" alt=\"\" class=\"φcx\"></p>\n<p>하단의 <strong>+</strong> 버튼을 누른다.</p>\n<p><img src=\"/image/uitest.png\" alt=\"\" class=\"φcx\"></p>\n<p><strong>UI Testing Bundle</strong> 을 생성한다.  상단에 test로 검색하면 빠르게 찾을 수 있다.</p>\n<p><img src=\"/image/uitest3.png\" alt=\"\" class=\"φcx\"></p>\n<p><strong>프로젝트명+Test.Swift</strong>이 생성된다. 들어가면 테스트 할 수 있는 에딧창이 뜬다.</p>\n<p>넘버라인쪽에 다이아몬드모양을 누르면 해당 메소드가 실행된다. 아랫것을 누르게 되면 위에서 부터 아래로 순차적으로 실행된다.</p>\n<p>단축키는 cmd + U 로 자동실행 할 수 있다.</p>\n<p><img src=\"/image/uitest2.png\" alt=\"\" class=\"φcx\"></p>\n<p>테스트가 성공적이면 이런 화면이 뜬다.</p>\n<p>아래 녹화를 누르면 tap()한 순서에 따라 코드가 자동적으로 작성된다.</p>\n<h2 id=\"실행\">실행<a title=\"#실행\" href=\"#실행\"></a></h2>\n<p>XCUIApplication의 경우</p>\n<p>accessibilityIdentifier로 식별.</p>\n<p><strong>UITableView</strong></p>\n<p>예시)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let firstCell &#x3D; app.tables.cells.staticTexts[&quot;WWDC보기&quot;]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>셀에 직접 접근</li>\n<li>.tap() 을 주면 클릭됨</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> if firstCell.waitForExistence(timeout: 1)&#123;&#x2F;&#x2F;if addButton.isHittable</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>시간차 주면서 버튼으로 옮김</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.app.tables.cells.element(boundBy: 0).tap()</span><br></pre></td></tr></table></figure>\n<ul>\n<li>엘리먼트로 접근가능.</li>\n</ul>\n<h3 id=\"xcuielement\">XCUIElement<a title=\"#xcuielement\" href=\"#xcuielement\"></a></h3>\n<ul>\n<li>tap()</li>\n<li>dubleTap</li>\n<li>Press</li>\n<li>swipeUp/Down/Left/Right</li>\n<li>typeText</li>\n</ul>\n<p><strong>잠자기</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sleep(1)</span><br></pre></td></tr></table></figure>\n<p><strong>비동기작업</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XCTAssertTrue(self.userlist.count)</span><br></pre></td></tr></table></figure>\n<p><strong>TextView, TextField의 경우</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let textView &#x3D; app.textViews[&quot;textView&quot;]</span><br><span class=\"line\">textView.tap() &#x2F;&#x2F;텍스뷰하기전에 꼭 탭을 해야함. 필드도 마찬가지</span><br><span class=\"line\"></span><br><span class=\"line\">textView.typeText(&quot;안녕하세요&quot;)&#x2F;&#x2F;키보드올리기 귀찮을때 이렇게 써서 테스트해볼수 있다.</span><br></pre></td></tr></table></figure>\n<p>//Recording UI Test</p>\n<h3 id=\"주의사항\">주의사항<a title=\"#주의사항\" href=\"#주의사항\"></a></h3>\n<ul>\n<li>중복 코드가 있는 경우</li>\n<li>코드가 구현되어 있지 않은 경우</li>\n</ul>\n<h3 id=\"xcuielementquery\">XCUIElementQuery<a title=\"#xcuielementquery\" href=\"#xcuielementquery\"></a></h3>\n<ul>\n<li>staticTexts</li>\n<li>firstMatch</li>\n<li>element(boundBy:)</li>\n<li>waitForExistence</li>\n</ul>\n<h3 id=\"assertion-method\">Assertion Method<a title=\"#assertion-method\" href=\"#assertion-method\"></a></h3>\n<p>XCTAssertTrue(true)<br>\nXCTAssertFalse(false)<br>\nXCTAssertNil(true)<br>\nXCTAssertNotNil(true)<br>\nXCTAssertEqual(true, true)</p>\n<h3 id=\"ishittable\">isHittable<a title=\"#ishittable\" href=\"#ishittable\"></a></h3>\n<ul>\n<li>화면이 존재하고 클릭가능한지의 여부</li>\n</ul>\n<h3 id=\"exists\">exists<a title=\"#exists\" href=\"#exists\"></a></h3>\n<ul>\n<li>화면이 존재하는지 여부</li>\n</ul>\n","prev":{"title":"Hello World","link":"2020/08/20/hello-world"},"next":{"title":"[Swift]FireBase이용하여 faceBook로그인","link":"2020/08/11/Swift-FireBase이용하여-faceBook로그인"},"plink":"https://Qussk.github.io/2020/08/12/Swift-UITest-진행/","toc":[{"id":"시작하기","title":"시작하기","index":"1"},{"id":"실행","title":"실행","index":"2","children":[{"id":"xcuielement","title":"XCUIElement","index":"2.1"},{"id":"주의사항","title":"주의사항","index":"2.2"},{"id":"xcuielementquery","title":"XCUIElementQuery","index":"2.3"},{"id":"assertion-method","title":"Assertion Method","index":"2.4"},{"id":"ishittable","title":"isHittable","index":"2.5"},{"id":"exists","title":"exists","index":"2.6"}]}]}