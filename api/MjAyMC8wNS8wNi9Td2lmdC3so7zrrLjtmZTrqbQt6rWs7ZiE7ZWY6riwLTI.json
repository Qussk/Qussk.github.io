{"title":"[Swift]주문화면 구현하기 -2","date":"2020-05-06T15:16:40.000Z","date_formatted":{"ll":"May 6, 2020","L":"05/06/2020","MM-DD":"05-06"},"thumbnail":"/image/firstTest.png","link":"2020/05/06/Swift-주문화면-구현하기-2","tags":["Alert","Swift","개발일기"],"categories":["ios"],"updated":"2020-05-06T07:13:25.223Z","content":"<h1 id=\"주문화면-구현하기--2\">주문화면 구현하기 -2<a title=\"#주문화면-구현하기--2\" href=\"#주문화면-구현하기--2\"></a></h1>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">주문 버튼 터치 시 각 아이템에 대한 수량 증가(완료)</span><br><span class=\"line\">각 아이템별 주문 수량 증가에 따른 결제금액 증가(완료)</span><br><span class=\"line\">결제 진행 시 소지금액에서 결제금액만큼 차감 및 주문수량 초기화(보류중)</span><br><span class=\"line\">소지금액이 결제금액보다 적은 경우 결제 불가 메시지 Alert 띄우기</span><br><span class=\"line\">초기화 버튼은 주문수량, 결제금액, 소지금액을 모두 초기화</span><br><span class=\"line\">초기화 버튼 이외에 한 번 올린 주문수량을 내리는 기능은 없음</span><br></pre></td></tr></table></figure>\n<p>현재 1~2는 완료되었고 3은 초기화까지만 완료된 상태다. 결제금액 차감은 결제버튼을 누르면 발생하는 Aler에 따라 실행되어야 하므로 일단 보류해 놓았다.</p>\n<p><a href=\"https://qussk.github.io/2020/05/06/Swift-%EC%A3%BC%EB%AC%B8%ED%99%94%EB%A9%B4-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-1\" target=\"_blank\">[주문화면 구현하기 -2 참조하기]</a></p>\n<p>현재까지 이상이 없다면 아래의 내용을 계속 진행하자.</p>\n<h2 id=\"4.-alertcontroller-활용\">4. AlertController 활용<a title=\"#4.-alertcontroller-활용\" href=\"#4.-alertcontroller-활용\"></a></h2>\n<p>4-1. 버튼에 Alert 달기.</p>\n<p>일단 버튼 아래에 let alertController을 살포시 얹는다…</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@objc func buyButtonClicked(_ sender: UIButton) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">let alertController &#x3D; UIAlertController(title: &quot;알림&quot;,message: &quot;결제금액은 모두\\(buyPay)원 입니다.&quot;, preferredStyle: .alert)</span><br><span class=\"line\">         </span><br><span class=\"line\">  let alert1Action &#x3D; UIAlertAction(title: &quot;취소&quot;, style: .cancel) &#123; _ in</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  let alert2Action &#x3D; UIAlertAction(title: &quot;확인&quot;, style: .destructive) &#123; _ in</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    alertController.addAction(alert1Action)</span><br><span class=\"line\">    alertController.addAction(alert2Action)</span><br><span class=\"line\">            </span><br><span class=\"line\">    present(alertController, animated: true)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">          </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/image/first-3.png\" alt=\"이미지\" class=\"φcx\"></p>\n<ul>\n<li>결제하기 버튼을 누르면 &quot;결제금액은 모두(결제금액)원 입니다.&quot;로 메세지가 나오도록 하고, preferredStyle: 을 .alert로 지정하여 해당 alert을 가운데로 팝업되도록 한다.</li>\n<li>UIAlertAction으로 “확인(destructive)”, &quot;취소(cancel)&quot;기능을 넣는다.</li>\n</ul>\n<p>4-2. 결제하기 누른후 alert에서 &quot;확인&quot;을 누르면 최종적으로 결제가 진행되고, 소지금액 차감.</p>\n<p>이전 포스트에서 잠시 보류해 놓았던 3-2를 이곳에 구현한다.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> alertController = <span class=\"type\">UIAlertController</span>(title: <span class=\"string\">\"알림\"</span>,message: <span class=\"string\">\"결제금액은 모두\\(buyPay)원 입니다.\"</span>, preferredStyle: .alert)</span><br><span class=\"line\">          </span><br><span class=\"line\">          <span class=\"keyword\">let</span> alert1Action = <span class=\"type\">UIAlertAction</span>(title: <span class=\"string\">\"취소\"</span>, style: .cancel) &#123; <span class=\"number\">_</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">            </span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"comment\">//소지금 - 결제금액 계산</span></span><br><span class=\"line\">          <span class=\"keyword\">let</span> alert2Action = <span class=\"type\">UIAlertAction</span>(title: <span class=\"string\">\"확인\"</span>, style: .destructive) &#123; <span class=\"number\">_</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">           <span class=\"keyword\">self</span>.sojiPay = <span class=\"keyword\">self</span>.sojiPay - <span class=\"keyword\">self</span>.buyPay</span><br><span class=\"line\">           <span class=\"keyword\">self</span>.sojiCost.text! = <span class=\"string\">\"\\(self.sojiPay)원\"</span></span><br><span class=\"line\">            </span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          </span><br><span class=\"line\">          alertController.addAction(alert1Action)</span><br><span class=\"line\">          alertController.addAction(alert2Action)</span><br><span class=\"line\">          </span><br><span class=\"line\">          present(alertController, animated: <span class=\"literal\">true</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>&quot;확인&quot;을 누르면 실행되어야 하기 때문에 “확인” UIAlertAction아래에 넣어준다.</li>\n<li>소지금액 = 소지금액 - 결제금액</li>\n</ul>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> - 소지금액레이블.text역시 소지금액값으로 바뀔수 있도록 써준다.</span><br><span class=\"line\">&#96;&#96;&#96;self.sojiCost.text! &#x3D; &quot;\\(self.sojiPay)원&quot;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/image/first-5.png\" alt=\"이미지\" class=\"φcx\"></p>\n<p>그러면 확인을 누르면 결제가 정상적으로 진행이 되는 모습을 볼 수 있다. <s>결제 진행 시 소지금액에서 결제금액만큼 차감 및 주문수량 초기화</s>도 모두 마쳤다.</p>\n<h2 id=\"5.-alert에-조건달기\">5. Alert에 조건달기<a title=\"#5.-alert에-조건달기\" href=\"#5.-alert에-조건달기\"></a></h2>\n<p>하지만 이것으로 끝이 아니다.</p>\n<p>구현사항을 보면, 소지금액은 70000원으로 정해져있고, 결제금액이 소지금액을 초과할 경우 결제가 진행되지 못하도록 Alert을 차단해야한다. 이때, 조건문이 필요하고 코드는 아래와 같은 코드가 된다.</p>\n<p>5-1. 소지금액이 결제금액보다 적은 경우 결제 불가 메시지 Alert 띄우기</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@objc</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">buyButtonClicked</span><span class=\"params\">(<span class=\"number\">_</span> sender: UIButton)</span></span> &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">if</span> sojiPay &lt;= buyPay &#123;</span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"keyword\">let</span> alertController = <span class=\"type\">UIAlertController</span>(title: <span class=\"string\">\"알림\"</span>,message: <span class=\"string\">\"소지금액이 부족합니다\"</span>, preferredStyle: .alert)</span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"keyword\">let</span> alert3Action = <span class=\"type\">UIAlertAction</span>(title: <span class=\"string\">\"확인\"</span>, style: .cancel) &#123; <span class=\"number\">_</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">       alertController.addAction(alert3Action)</span><br><span class=\"line\">       present(alertController, animated: <span class=\"literal\">true</span>)</span><br><span class=\"line\">   </span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> alertController = <span class=\"type\">UIAlertController</span>(title: <span class=\"string\">\"알림\"</span>,message: <span class=\"string\">\"결제금액은 모두\\(buyPay)원 입니다.\"</span>, preferredStyle: .alert)</span><br><span class=\"line\">               </span><br><span class=\"line\">               <span class=\"keyword\">let</span> alert1Action = <span class=\"type\">UIAlertAction</span>(title: <span class=\"string\">\"취소\"</span>, style: .cancel) &#123; <span class=\"number\">_</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">                 </span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               <span class=\"comment\">//소지금 - 결제금액 계산</span></span><br><span class=\"line\">               <span class=\"keyword\">let</span> alert2Action = <span class=\"type\">UIAlertAction</span>(title: <span class=\"string\">\"확인\"</span>, style: .destructive) &#123; <span class=\"number\">_</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">                <span class=\"keyword\">self</span>.sojiPay = <span class=\"keyword\">self</span>.sojiPay - <span class=\"keyword\">self</span>.buyPay</span><br><span class=\"line\">                <span class=\"keyword\">self</span>.sojiCost.text! = <span class=\"string\">\"\\(self.sojiPay)원\"</span></span><br><span class=\"line\">                 </span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               </span><br><span class=\"line\">               alertController.addAction(alert1Action)</span><br><span class=\"line\">               alertController.addAction(alert2Action)</span><br><span class=\"line\">               </span><br><span class=\"line\">               present(alertController, animated: <span class=\"literal\">true</span>)</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/image/first-4.png\" alt=\"이미지\" class=\"φcx\"></p>\n<ul>\n<li>if sojiPay &lt;= buyPay { 의 경우 아래의 Alert이 실행되도록한다.</li>\n<li>잊지 말아야하는 부분은 present(alertController, animated: true)도 꼭 달아줘야한다…</li>\n</ul>\n<p>사실 시험때 구현은 다 해놓고 present을 실수로 안넣어서… Alert이 작동이 안됐다… 계속 왜 안되는 거야? 하면서 다른곳에서 이유를 찾다가 시간낭비했다… ㅠㅠ… 몬가 변수쪽이 잘못됐다고 생각했던 것…</p>\n<p>어쨌든, 이것으로 <s>4.소지금액이 결제금액보다 적은 경우 결제 불가 메시지 Alert 띄우기</s>역시 완료가 되었다. 아래의 <s>5.초기화 버튼은 주문수량, 결제금액, 소지금액을 모두 초기화</s>는 3-1에서 구현이 완료되었고,<br>\n<s>6.초기화 버튼 이외에 한 번 올린 주문수량을 내리는 기능은 없음</s>이것도 크게 구현하지 않는 내용이기 때문에 자동으로 클리어된 부분.</p>\n<h3 id=\"셀프체크리스트를-통해-정확하게-구현됐는지-확인한다.\">셀프체크리스트를 통해 정확하게 구현됐는지 확인한다.<a title=\"#셀프체크리스트를-통해-정확하게-구현됐는지-확인한다.\" href=\"#셀프체크리스트를-통해-정확하게-구현됐는지-확인한다.\"></a></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">✓ UI 구현 : 스토리보드와 코드를 이용해 정확한 UI 구현</span><br><span class=\"line\">✓ 주문하기 기능 : 특정 아이템의 수량이 1씩 증가하며, 결제금액에 반영</span><br><span class=\"line\">✓ 결제하기 기능</span><br><span class=\"line\">- 소지금에서 결제금액이 정확히 차감. 소지금은 -가 될 수 없음</span><br><span class=\"line\">- 소지금이 결제금액보다 작을때, 같을 때, 클 때 각각의 상황 모두 체크</span><br><span class=\"line\">✓ 초기화하기 기능 : 소지금, 결제금액, 주문수량의 정보가 모두 정확히 0으로 초기화</span><br><span class=\"line\">✓ AlertController 동작</span><br><span class=\"line\">- 결제 성공 : &quot;총 결제금액은 ****원입니다.&quot;. 버튼 종류는 확인, 취소 버튼 2개</span><br><span class=\"line\">- 결제 실패 : &quot;소지금액이 부족합니다&quot;메시지. 버튼 종류는 확인 버튼 하나</span><br></pre></td></tr></table></figure>\n<p>이상이 없다면 이것으로 마침! :princess:</p>\n","prev":{"title":"[Swift]로그인화면 구현하기","link":"2020/05/06/Swift-로그인화면-구현하기"},"next":{"title":"[Swift]주문화면 구현하기 -1","link":"2020/05/06/Swift-주문화면-구현하기-1"},"plink":"https://Qussk.github.io/2020/05/06/Swift-주문화면-구현하기-2/","toc":[{"id":"주문화면-구현하기--2","title":"주문화면 구현하기 -2","index":"1","children":[{"id":"4.-alertcontroller-활용","title":"4. AlertController 활용","index":"1.1"},{"id":"5.-alert에-조건달기","title":"5. Alert에 조건달기","index":"1.2","children":[{"id":"셀프체크리스트를-통해-정확하게-구현됐는지-확인한다.","title":"셀프체크리스트를 통해 정확하게 구현됐는지 확인한다.","index":"1.2.1"}]}]}]}