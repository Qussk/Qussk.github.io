{"title":"[Swift]UIImagePickerController 이해하기","date":"2020-06-02T14:14:50.000Z","date_formatted":{"ll":"Jun 2, 2020","L":"06/02/2020","MM-DD":"06-02"},"thumbnail":"/image/pikermain.png","link":"2020/06/02/Swift-UIImagePiker-이해하기","tags":["ImagePicker","Swift","UIImagePickerController"],"categories":["ios"],"updated":"2020-06-02T11:07:49.186Z","content":"<h2 id=\"사전작업\">사전작업<a title=\"#사전작업\" href=\"#사전작업\"></a></h2>\n<h3 id=\"uiimagepickercontroller\">UIImagePickerController<a title=\"#uiimagepickercontroller\" href=\"#uiimagepickercontroller\"></a></h3>\n<ul>\n<li><code>let imagePiker = UIImagePickerController()</code> 로도 쓸 수 있지만, 뷰디드로드로 하기엔 delegate =.self 선언 할 것이 한개 밖에 없을 때. lazy를 이용하여 간편하게 코드를 짤 수도 있다. 아래 코으 참고.(delegate와 UIImagePickerController선언 함께 사용하기)</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewController</span>: <span class=\"title\">UIViewController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@IBOutlet</span> <span class=\"keyword\">private</span> <span class=\"keyword\">weak</span> <span class=\"keyword\">var</span> imageView: <span class=\"type\">UIImageView!</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"built_in\">lazy</span> <span class=\"keyword\">var</span> imagePicker: <span class=\"type\">UIImagePickerController</span> = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> imagePiker = <span class=\"type\">UIImagePickerController</span>()</span><br><span class=\"line\">    imagePiker.delegate = <span class=\"keyword\">self</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> imagePiker</span><br><span class=\"line\">&#125;()</span><br></pre></td></tr></table></figure>\n<h2 id=\"실습-들어가기\">실습 들어가기<a title=\"#실습-들어가기\" href=\"#실습-들어가기\"></a></h2>\n<h2 id=\"1.-앨범\">1. 앨범<a title=\"#1.-앨범\" href=\"#1.-앨범\"></a></h2>\n<h3 id=\"1-1.-앨범-타입-지정\">1-1. 앨범 타입 지정<a title=\"#1-1.-앨범-타입-지정\" href=\"#1-1.-앨범-타입-지정\"></a></h3>\n<ul>\n<li>imagePicker.sourceType</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.앨범</span></span><br><span class=\"line\"><span class=\"meta\">@IBAction</span> <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">pickImage</span><span class=\"params\">(<span class=\"number\">_</span> sender: <span class=\"keyword\">Any</span>)</span></span> &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">    imagePicker.sourceType = .photoLibrary <span class=\"comment\">//포토라이브러리는 앨범선택하는 화면 보여줌.</span></span><br><span class=\"line\">  <span class=\"comment\">//imagePicker.sourceType = .savedPhotosAlbum //최근에 찍은 사진 위주로 보여줌.</span></span><br><span class=\"line\">   present(imagePicker, animated:  <span class=\"literal\">true</span>)</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/image/piker1.png\" alt=\"\" class=\"φcx\"></p>\n<h3 id=\"1-2.-앨범-didcancel-및--didfinishpickingmediawithinfo.\">1-2. 앨범 DidCancel 및  didFinishPickingMediaWithInfo.<a title=\"#1-2.-앨범-didcancel-및--didfinishpickingmediawithinfo.\" href=\"#1-2.-앨범-didcancel-및--didfinishpickingmediawithinfo.\"></a></h3>\n<ul>\n<li>UIImagePickerControllerDelegate 이용, 네비게이션 바 이용하는 경우, UINavigationControllerDelegate 함께 필요.</li>\n<li>imagePickerControllerDidCancel 와 didFinishPickingMediaWithInfo중 쓰임새에 따라 선택하여 사용.</li>\n<li>dismiss는 필수인데, picker.presentingViewController?.dismiss(animated: true) 나, dismiss(animated: true)중에서 택하여 사용</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//MARK:- UIImagePickerControllerDelegate</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">ViewController</span>: <span class=\"title\">UIImagePickerControllerDelegate</span>, <span class=\"title\">UINavigationControllerDelegate</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//닫기만 할 때는 생략가능. 창 캔슬시 기록이나 설정 필요한 경우 사용.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">imagePickerControllerDidCancel</span><span class=\"params\">(<span class=\"number\">_</span> picker: UIImagePickerController)</span></span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//  picker.presentingViewController?.dismiss(animated: true)</span></span><br><span class=\"line\"><span class=\"comment\">//  dismiss(animated: true)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//사진이나 영상을 찍었을 때 이미지를 가져오는 함수  </span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">imagePickerController</span><span class=\"params\">(<span class=\"number\">_</span> picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : <span class=\"keyword\">Any</span>])</span></span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">let</span> mediaType = info[.originalImage] <span class=\"keyword\">as</span>! <span class=\"type\">NSString</span> </span><br><span class=\"line\">  <span class=\"comment\">//NSString는 objc에서 사용. 기능 많은 String \"문자열\"임</span></span><br><span class=\"line\">       </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// dismiss</span></span><br><span class=\"line\"> <span class=\"comment\">// picker.presentingViewController?.dismiss(animated: true)</span></span><br><span class=\"line\">    dismiss(animated: <span class=\"literal\">true</span>) <span class=\"comment\">//위에꺼 하든 아래것 하든 둘중 하나 택 </span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/image/piker.png\" alt=\"\" class=\"φcx\"></p>\n<p>그럼 이런 식으로 앨범 버튼을 누를 때, 사진첩에 접근함.<br>\nCancel 누르면 창 닫힘.</p>\n<h2 id=\"2.-카메라\">2. 카메라<a title=\"#2.-카메라\" href=\"#2.-카메라\"></a></h2>\n<h3 id=\"2-1.-카메라-권한-허락,-카메라-클릭시-동영상-촬영기능-포함하기.\">2-1. 카메라 권한 허락, 카메라 클릭시 동영상 촬영기능 포함하기.<a title=\"#2-1.-카메라-권한-허락,-카메라-클릭시-동영상-촬영기능-포함하기.\" href=\"#2-1.-카메라-권한-허락,-카메라-클릭시-동영상-촬영기능-포함하기.\"></a></h3>\n<ul>\n<li>2-0. import 하기 (MobileCoreServices)</li>\n</ul>\n<p><img src=\"/image/piker2.png\" alt=\"\" class=\"φcx\"></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.카메라</span></span><br><span class=\"line\"><span class=\"meta\">@IBAction</span> <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">takePicture</span><span class=\"params\">(<span class=\"number\">_</span> sender: <span class=\"keyword\">Any</span>)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2-1. 카메라 사용할건지 허락</span></span><br><span class=\"line\"><span class=\"keyword\">guard</span> <span class=\"type\">UIImagePickerController</span>.isSourceTypeAvailable(.camera) <span class=\"keyword\">else</span> &#123;<span class=\"keyword\">return</span>&#125;</span><br><span class=\"line\">imagePicker.sourceType = .camera</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2-2. 동영상 찍을 수 있도록 카메라 클릭시 photo, vidio 생김. </span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(imagePicker.mediaTypes)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> mediaTypes =  <span class=\"type\">UIImagePickerController</span>.availableMediaTypes(<span class=\"keyword\">for</span>: .camera)</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(mediaTypes)</span><br><span class=\"line\">  </span><br><span class=\"line\">  imagePicker.mediaTypes = mediaTypes ?? []</span><br><span class=\"line\">  imagePicker.mediaTypes = [<span class=\"string\">\"public.image\"</span>,<span class=\"string\">\"public.moview\"</span>]</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//kUTTypeVideo - 비디오 (영상)</span></span><br><span class=\"line\">  <span class=\"comment\">//kUTTypeMovie - 무비 (영상 + 소리)</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//String대신에 키값을 대신하여 사용.</span></span><br><span class=\"line\">  imagePicker.mediaTypes = [kUTTypeImage, kUTTypeMovie] <span class=\"keyword\">as</span> [<span class=\"type\">String</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2-3.전면 카메라/후면카메라</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"type\">UIImagePickerController</span>.isFlashAvailable(<span class=\"keyword\">for</span>: .rear) &#123;</span><br><span class=\"line\">    imagePicker.cameraFlashMode = .auto</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"> <span class=\"comment\">//필수 </span></span><br><span class=\"line\">  present(imagePicker, animated: <span class=\"literal\">true</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2.-info.plist에서-앱권한-설정.\">2-2. info.plist에서 앱권한 설정.<a title=\"#2-2.-info.plist에서-앱권한-설정.\" href=\"#2-2.-info.plist에서-앱권한-설정.\"></a></h3>\n<p><img src=\"/image/piker4.png\" alt=\"\" class=\"φcx\"></p>\n<ul>\n<li>Information Property List 에 + 를 눌러 추가후, Pirvacy - Photo Librart Additions Description 지정.</li>\n<li>Value에는 사용 목적 쓰기.</li>\n</ul>\n<p>앱 실행해 보면</p>\n<p><img src=\"/image/piker6.png\" alt=\"\" class=\"φcx\"></p>\n<p>디버그에 오류뜸.</p>\n<p><img src=\"/image/piker5.png\" alt=\"\" class=\"φcx\"></p>\n<p>동영상 촬영시 마이크에 접근하므로 마이크도 권한 설정함.</p>\n<ul>\n<li>Information Property List 에 Pirvacy - Microphone Usage Description</li>\n</ul>\n<p><img src=\"/image/piker7.jpeg\" alt=\"\" class=\"φcx\"></p>\n<p>그럼 카메라 구현도 문제없이 실행된다 !</p>\n<h2 id=\"5.-화살표\">5. 화살표<a title=\"#5.-화살표\" href=\"#5.-화살표\"></a></h2>\n<p>(맨 우측 버튼)</p>\n<h3 id=\"찍은-사진-라이브러리에-접근하여-편집.\">찍은 사진 라이브러리에 접근하여 편집.<a title=\"#찍은-사진-라이브러리에-접근하여-편집.\" href=\"#찍은-사진-라이브러리에-접근하여-편집.\"></a></h3>\n<h3 id=\"5-1.-토글작업..\">5-1. 토글작업…<a title=\"#5-1.-토글작업..\" href=\"#5-1.-토글작업..\"></a></h3>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//5. 화살표</span></span><br><span class=\"line\"> <span class=\"meta\">@IBAction</span> <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">toggleAllowsEditing</span><span class=\"params\">(<span class=\"number\">_</span> sender: <span class=\"keyword\">Any</span>)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"\\n---------- [ toggleAllowsEditing ] ----------\\n\"</span>)</span><br><span class=\"line\">    <span class=\"comment\">//5-1.</span></span><br><span class=\"line\">    imagePicker.allowsEditing.toggle()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>이미지나 영상을 찍었을때 가져오는 함수로 이동하여 아래코드 구현. (didFinishPickingMediaWithInfo)</li>\n</ul>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">imagePickerController</span><span class=\"params\">(<span class=\"number\">_</span> picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : <span class=\"keyword\">Any</span>])</span></span> &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">let</span> mediaType = info[.mediaType] <span class=\"keyword\">as</span>! <span class=\"type\">NSString</span></span><br><span class=\"line\">   <span class=\"comment\">//NSString: objc에서 사용. 기능 많은String</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">if</span> <span class=\"type\">UTTypeEqual</span>(mediaType, kUTTypeImage) &#123; <span class=\"comment\">//사진</span></span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">let</span> originalImage = info[.originalImage] <span class=\"keyword\">as</span>! <span class=\"type\">UIImage</span></span><br><span class=\"line\">     <span class=\"comment\">//5-2. 편집을 할 때만 있는거기 때문에 ?사용</span></span><br><span class=\"line\">     <span class=\"keyword\">let</span> editedImage = info[.editedImage] <span class=\"keyword\">as</span>? <span class=\"type\">UIImage</span></span><br><span class=\"line\">     <span class=\"comment\">//5-3. 최종이미지</span></span><br><span class=\"line\">     <span class=\"keyword\">let</span> selectedImage = editedImage ?? originalImage</span><br><span class=\"line\">     <span class=\"comment\">//5-4.originalImage을 selectedImage로 변경.</span></span><br><span class=\"line\">     imageView.image = selectedImage<span class=\"comment\">/*originalImage*/</span></span><br><span class=\"line\">     </span><br><span class=\"line\">     <span class=\"built_in\">print</span>(info)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/image/piker9.jpeg\" alt=\"\" class=\"φcx\"></p>\n<p>이런식으로 사진 편집 가능하게 됨… 하지만 저장하면 멈춤…</p>\n<h3 id=\"5-2.info.plist에서-앱권한-설정.\">5-2.info.plist에서 앱권한 설정.<a title=\"#5-2.info.plist에서-앱권한-설정.\" href=\"#5-2.info.plist에서-앱권한-설정.\"></a></h3>\n<p><img src=\"/image/piker7.png\" alt=\"\" class=\"φcx\"></p>\n<ul>\n<li>Information Property List 에 Privacy - Photo Library AddUsage Descriptrion을 추가하고 Value에 목적을 쓴다.</li>\n</ul>\n<p>(참고로 Key에 Control + 마우스 좌측 누르면 &quot;Raw Keys &amp; Values&quot;로 원래 이름? 값을 볼 수 있다.<br>\n체크해서, NSPhotoLibraryAddUsageDescriptrion )</p>\n<p><img src=\"/image/piker13.jpeg\" alt=\"\" class=\"φcx\"></p>\n<p>그럼 앱처음 켤때 이런 메세지 확인가능해짐.</p>\n<h2 id=\"3.-딜레이-촬영\">3. 딜레이 촬영<a title=\"#3.-딜레이-촬영\" href=\"#3.-딜레이-촬영\"></a></h2>\n<h3 id=\"앱-실행되자마자-촬영되게-끔~-시간차-이용하여-촬영되도록-설정\">앱 실행되자마자 촬영되게 끔~ 시간차 이용하여 촬영되도록 설정<a title=\"#앱-실행되자마자-촬영되게-끔~-시간차-이용하여-촬영되도록-설정\" href=\"#앱-실행되자마자-촬영되게-끔~-시간차-이용하여-촬영되도록-설정\"></a></h3>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//3.딜레이촬영</span></span><br><span class=\"line\"><span class=\"meta\">@IBAction</span> <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">takePictureWithDelay</span><span class=\"params\">(<span class=\"number\">_</span> sender: <span class=\"keyword\">Any</span>)</span></span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">guard</span> <span class=\"type\">UIImagePickerController</span>.isSourceTypeAvailable(.camera) <span class=\"keyword\">else</span> &#123;<span class=\"keyword\">return</span>&#125;</span><br><span class=\"line\">  imagePicker.sourceType = .camera</span><br><span class=\"line\">  imagePicker.mediaTypes = [kUTTypeImage <span class=\"keyword\">as</span> <span class=\"type\">String</span>]</span><br><span class=\"line\">  </span><br><span class=\"line\">  present(imagePicker, animated: <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// present(imagePicker, animated: true, completion: )//completion : 프레젠트가 끝날 때 코드</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//화면 띄우자마자 촬영</span></span><br><span class=\"line\">    <span class=\"comment\">// self.imagePicker.takePicture()</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//2초뒤 촬영</span></span><br><span class=\"line\">    <span class=\"type\">DispatchQueue</span>.main.asyncAfter(deadline: .now() + <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">self</span>.imagePicker.takePicture()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/image/piker11.jpeg\" alt=\"\" class=\"φcx\"></p>\n<p>빌드하고 촬영해보면 이런 식으로 나온다.</p>\n<h2 id=\"4.-동영상-촬영\">4. 동영상 촬영<a title=\"#4.-동영상-촬영\" href=\"#4.-동영상-촬영\"></a></h2>\n<h3 id=\"4-1.-촬영-기능-설정.\">4-1. 촬영 기능 설정.<a title=\"#4-1.-촬영-기능-설정.\" href=\"#4-1.-촬영-기능-설정.\"></a></h3>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//4.동영상 촬영</span></span><br><span class=\"line\"><span class=\"meta\">@IBAction</span> <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">recordingVideo</span><span class=\"params\">(<span class=\"number\">_</span> sender: <span class=\"keyword\">Any</span>)</span></span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">guard</span> <span class=\"type\">UIImagePickerController</span>.isSourceTypeAvailable(.camera) <span class=\"keyword\">else</span> &#123;<span class=\"keyword\">return</span>&#125;</span><br><span class=\"line\">  imagePicker.sourceType = .camera</span><br><span class=\"line\">  <span class=\"comment\">//앨범에 사진 안나오고 동영상만나옴.//[kUTTypeImage,kUTTypeMovie as String] 이렇게 해야 이미지도 뜸 //그런데 왜인지 아래로 해두 된다..</span></span><br><span class=\"line\">  imagePicker.mediaTypes = [kUTTypeMovie <span class=\"keyword\">as</span> <span class=\"type\">String</span>]</span><br><span class=\"line\">  <span class=\"comment\">// imagePicker.mediaTypes = [\"public.movie\"]</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  imagePicker.cameraCaptureMode = .video <span class=\"comment\">// 처음시작을 video로 하고 싶은 경우</span></span><br><span class=\"line\">  <span class=\"comment\">//imagePicker.cameraCaptureMode = .photo //처름시작을  photo로 하고 싶은 경우</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//front전면 카메라 ,rear후면 카메라</span></span><br><span class=\"line\">  imagePicker.cameraDevice = .rear</span><br><span class=\"line\">  </span><br><span class=\"line\">  present(imagePicker, animated: <span class=\"literal\">true</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//imagePicker.startvideoCapture()</span></span><br><span class=\"line\">  <span class=\"comment\">//  imagePicker.stopVideoCapture()</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  imagePicker.videoMaximumDuration = <span class=\"number\">10</span> <span class=\"comment\">//초단위, 기본 10분. - 동영상 타이머 설정가능.</span></span><br><span class=\"line\">  imagePicker.videoQuality = .typeHigh <span class=\"comment\">//고화질 - 화질변경 가능.</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2.-영상-불러오는-함수-추가.-(조건문-활용)\">4-2. 영상 불러오는 함수 추가. (조건문 활용)<a title=\"#4-2.-영상-불러오는-함수-추가.-(조건문-활용)\" href=\"#4-2.-영상-불러오는-함수-추가.-(조건문-활용)\"></a></h3>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">imagePickerController</span><span class=\"params\">(<span class=\"number\">_</span> picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : <span class=\"keyword\">Any</span>])</span></span> &#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">let</span> mediaType = info[.mediaType] <span class=\"keyword\">as</span>! <span class=\"type\">NSString</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">if</span> <span class=\"type\">UTTypeEqual</span>(mediaType, kUTTypeImage) &#123; <span class=\"comment\">//사진</span></span><br><span class=\"line\">     <span class=\"keyword\">let</span> originalImage = info[.originalImage] <span class=\"keyword\">as</span>! <span class=\"type\">UIImage</span></span><br><span class=\"line\">     <span class=\"keyword\">let</span> editedImage = info[.editedImage] <span class=\"keyword\">as</span>? <span class=\"type\">UIImage</span></span><br><span class=\"line\">     <span class=\"keyword\">let</span> selectedImage = editedImage ?? originalImage</span><br><span class=\"line\">     imageView.image = selectedImage</span><br><span class=\"line\">     </span><br><span class=\"line\">     <span class=\"built_in\">print</span>(info)</span><br><span class=\"line\">     </span><br><span class=\"line\">     <span class=\"comment\">//카메라로 찍은 경우만 저장</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> picker.sourceType == .camera &#123;</span><br><span class=\"line\">       <span class=\"type\">UIImageWriteToSavedPhotosAlbum</span>(selectedImage, <span class=\"literal\">nil</span>, <span class=\"literal\">nil</span>, <span class=\"literal\">nil</span>)</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> <span class=\"type\">UTTypeEqual</span>(mediaType, kUTTypeMovie) &#123; <span class=\"comment\">//영상</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> mediaPath = (info[.mediaURL] <span class=\"keyword\">as</span>? <span class=\"type\">NSURL</span>)?.path,</span><br><span class=\"line\">       <span class=\"type\">UIVideoAtPathIsCompatibleWithSavedPhotosAlbum</span>(mediaPath) &#123;</span><br><span class=\"line\">       <span class=\"type\">UISaveVideoAtPathToSavedPhotosAlbum</span>(mediaPath, <span class=\"literal\">nil</span>, <span class=\"literal\">nil</span>, <span class=\"literal\">nil</span>)</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">       <span class=\"comment\">//picker.presentingViewController?.dismiss(animated: true)</span></span><br><span class=\"line\">       dismiss(animated: <span class=\"literal\">true</span>) <span class=\"comment\">//위에꺼 하든 아래것 하든 상관 없음</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>동영상 버튼 누르게 되면</p>\n<p><img src=\"/image/piker12.jpeg\" alt=\"\" class=\"φcx\"></p>\n<p>된다.</p>\n<h3 id=\"[전체코드]\">[전체코드]<a title=\"#[전체코드]\" href=\"#[전체코드]\"></a></h3>\n<pre><code class=\"language-swift\">import MobileCoreServices\nimport UIKit\n\nfinal class ViewController: UIViewController {\n  \n  @IBOutlet private weak var imageView: UIImageView!\n  \n//  let picker = UIImagePickerController()\n  \n  private lazy var imagePicker: UIImagePickerController = {\n    let imagePiker = UIImagePickerController()\n    imagePiker.delegate = self\n    return imagePiker\n  }()\n  \n  \n  // MARK: Action\n  \n  //1.앨범\n  @IBAction private func pickImage(_ sender: Any) {\n    print(&quot;\\n---------- [ pickImage ] ----------\\n&quot;)\n    \n    imagePicker.sourceType = .photoLibrary //포토라이브러리는 앨범선택하는 화면 보여줌.\n    //. imagePicker.sourceType = .savedPhotosAlbum //최근에 찍은 사진 위주로 보여줌.\n    //   imagePicker.mediaTypes = [kUTTypeMovie]\n    present(imagePicker, animated:  true)\n    \n  }\n  \n  //2.카메라\n  @IBAction private func takePicture(_ sender: Any) {\n    print(&quot;\\n---------- [ takePicture ] ----------\\n&quot;)\n    \n    //카메라 사용할건지 허락\n    guard UIImagePickerController.isSourceTypeAvailable(.camera) else {return}\n    imagePicker.sourceType = .camera\n    \n    //동영상 찍을 수 있도록 생김.\n    print(imagePicker.mediaTypes)\n    let mediaTypes =  UIImagePickerController.availableMediaTypes(for: .camera)\n    print(mediaTypes)\n    \n    imagePicker.mediaTypes = mediaTypes ?? []\n    imagePicker.mediaTypes = [&quot;public.image&quot;,&quot;public.moview&quot;]\n    \n    //kUTTypeVideo - 비디오 (영상)\n    //kUTTypeMovie - 무비 (영상 + 소리)\n    \n    //String대신에 키값을 대신하여 사용.\n    imagePicker.mediaTypes = [kUTTypeImage, kUTTypeMovie] as [String]\n    \n    //2-1.전면 카메라/후면카메라\n    if UIImagePickerController.isFlashAvailable(for: .rear) {\n      imagePicker.cameraFlashMode = .auto\n    }\n    \n    \n    present(imagePicker, animated: true)\n    \n  }\n  \n  \n  //3.딜레이촬영\n  @IBAction private func takePictureWithDelay(_ sender: Any) {\n    \n    \n    guard UIImagePickerController.isSourceTypeAvailable(.camera) else {return}\n    imagePicker.sourceType = .camera\n    imagePicker.mediaTypes = [kUTTypeImage as String]\n    \n    present(imagePicker, animated: true) {\n      // present(imagePicker, animated: true, completion: )//completion : 프레젠트가 끝날 때 코드\n      \n      //화면 띄우자마자 촬영\n      // self.imagePicker.takePicture()\n      \n      //2초뒤 촬영\n      DispatchQueue.main.asyncAfter(deadline: .now() + 2) {\n        self.imagePicker.takePicture()\n      }\n      print(&quot;\\n---------- [ takePictureWithDelay ] ----------\\n&quot;)\n    }\n  }\n  \n  //4.동영상 촬영\n  @IBAction private func recordingVideo(_ sender: Any) {\n    print(&quot;\\n---------- [ recordingVideo ] ----------\\n&quot;)\n    \n    guard UIImagePickerController.isSourceTypeAvailable(.camera) else {return}\n    imagePicker.sourceType = .camera\n    //앨범에 사진 안나오고 동영상만나옴.//[kUTTypeImage,kUTTypeMovie as String] 이렇게 해야 이미지도 뜸\n    imagePicker.mediaTypes = [kUTTypeMovie as String]\n    // imagePicker.mediaTypes = [&quot;public.movie&quot;]\n    \n    imagePicker.cameraCaptureMode = .video // 처음시작을 video로 하고 싶은 경우\n    //   imagePicker.cameraCaptureMode = .photo //처름시작을  photo로 하고 싶은 경우\n    \n    \n    //front전면 카메라 ,rear후면 카메라\n    imagePicker.cameraDevice = .rear\n    \n    present(imagePicker, animated: true)\n    \n    //imagePicker.startvideoCapture()\n    //  imagePicker.stopVideoCapture()\n    \n    imagePicker.videoMaximumDuration = 10 //초단위, 기본 10분\n    imagePicker.videoQuality = .typeHigh //고화질\n  }\n  \n  //5.화살표\n  @IBAction private func toggleAllowsEditing(_ sender: Any) {\n    print(&quot;\\n---------- [ toggleAllowsEditing ] ----------\\n&quot;)\n    //2-2.\n    imagePicker.allowsEditing.toggle()\n  }\n}\n\n//MARK:- UIImagePickerControllerDelegate\nextension ViewController: UIImagePickerControllerDelegate, UINavigationControllerDelegate {\n  //네비게이션안에 생성되어있으므로, 네비컨트롤러딜리게이트도 필요.\n  //imagePickerControllerDidCancel : 의 경우 dismiss직접구현 필요함.\n  //imagePickerControllerDidCancel를 하지 않으면 아주 잘닫힘.. 구현 필요없는 경우엔 생략\n  \n  //  func imagePickerControllerDidCancel(_ picker: UIImagePickerController) {\n  //    picker.presentingViewController?.dismiss(animated: true)\n  //  //dismiss(animated: true)\n  //닫기만할때는 굳이 구현 필요없으나, 캔슬시 기록이나 설정 필요한 경우 사용.\n  \n  //이미지나 영상을 찍었을때 가져오는 함수\n  //didFinishPickingMediaWithInfo: 어떤 것을 픽했는지 알려주는.//피킹한것을 끝냈다.\n  func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {\n    \n    \n    let mediaType = info[.mediaType] as! NSString\n    //NSString: objc에서 사용. 기능 많은String\n    \n    if UTTypeEqual(mediaType, kUTTypeImage) { //사진\n\n      let originalImage = info[.originalImage] as! UIImage\n      //2-3. 편집을 할 때만 있는거기 때문에 ?사용\n      let editedImage = info[.editedImage] as? UIImage\n      //2-4. 최종이미지\n      let selectedImage = editedImage ?? originalImage\n      //2-5.originalImage을 selectedImage로 변경.\n      imageView.image = selectedImage/*originalImage*/\n      \n      print(info)\n      \n      //카메라로 찍은 경우만 저장\n      if picker.sourceType == .camera {\n        UIImageWriteToSavedPhotosAlbum(selectedImage, nil, nil, nil)\n      }\n      }else if UTTypeEqual(mediaType, kUTTypeMovie) { //영상\n      if let mediaPath = (info[.mediaURL] as? NSURL)?.path,\n        UIVideoAtPathIsCompatibleWithSavedPhotosAlbum(mediaPath) {\n        UISaveVideoAtPathToSavedPhotosAlbum(mediaPath, nil, nil, nil)\n      }\n    }\n        //picker.presentingViewController?.dismiss(animated: true)\n        dismiss(animated: true) //위에꺼 하든 아래것 하든 상관 없음\n        \n      }\n      \n    }\n    \n</code></pre>\n","prev":{"title":"[Swift]Storyboard이용하지 않고 Xcode사용하기","link":"2020/06/02/Swift-Stortboard이용하지-않고-Xcode사용하기"},"next":{"title":"[Swift]CustomTableViewCell만들기","link":"2020/05/28/Swift-Custom-TableView만들기"},"plink":"https://Qussk.github.io/2020/06/02/Swift-UIImagePiker-이해하기/","toc":[{"id":"사전작업","title":"사전작업","index":"1","children":[{"id":"uiimagepickercontroller","title":"UIImagePickerController","index":"1.1"}]},{"id":"실습-들어가기","title":"실습 들어가기","index":"2"},{"id":"1.-앨범","title":"1. 앨범","index":"3","children":[{"id":"1-1.-앨범-타입-지정","title":"1-1. 앨범 타입 지정","index":"3.1"},{"id":"1-2.-앨범-didcancel-및--didfinishpickingmediawithinfo.","title":"1-2. 앨범 DidCancel 및  didFinishPickingMediaWithInfo.","index":"3.2"}]},{"id":"2.-카메라","title":"2. 카메라","index":"4","children":[{"id":"2-1.-카메라-권한-허락,-카메라-클릭시-동영상-촬영기능-포함하기.","title":"2-1. 카메라 권한 허락, 카메라 클릭시 동영상 촬영기능 포함하기.","index":"4.1"},{"id":"2-2.-info.plist에서-앱권한-설정.","title":"2-2. info.plist에서 앱권한 설정.","index":"4.2"}]},{"id":"5.-화살표","title":"5. 화살표","index":"5","children":[{"id":"찍은-사진-라이브러리에-접근하여-편집.","title":"찍은 사진 라이브러리에 접근하여 편집.","index":"5.1"},{"id":"5-1.-토글작업..","title":"5-1. 토글작업…","index":"5.2"},{"id":"5-2.info.plist에서-앱권한-설정.","title":"5-2.info.plist에서 앱권한 설정.","index":"5.3"}]},{"id":"3.-딜레이-촬영","title":"3. 딜레이 촬영","index":"6","children":[{"id":"앱-실행되자마자-촬영되게-끔~-시간차-이용하여-촬영되도록-설정","title":"앱 실행되자마자 촬영되게 끔~ 시간차 이용하여 촬영되도록 설정","index":"6.1"}]},{"id":"4.-동영상-촬영","title":"4. 동영상 촬영","index":"7","children":[{"id":"4-1.-촬영-기능-설정.","title":"4-1. 촬영 기능 설정.","index":"7.1"},{"id":"4-2.-영상-불러오는-함수-추가.-(조건문-활용)","title":"4-2. 영상 불러오는 함수 추가. (조건문 활용)","index":"7.2"},{"id":"[전체코드]","title":"[전체코드]","index":"7.3"}]}]}