{"title":"[Swift]주문화면 구현하기 -1","date":"2020-05-06T13:39:41.000Z","date_formatted":{"ll":"May 6, 2020","L":"05/06/2020","MM-DD":"05-06"},"thumbnail":"/image/firstTest.png","link":"2020/05/06/Swift-주문화면-구현하기-1","tags":["Button","Lable","Swift","frame","개발일기"],"categories":["ios"],"updated":"2020-05-06T06:01:52.973Z","content":"<h1 id=\"주문화면-구현하기--1\">주문화면 구현하기 -1<a title=\"#주문화면-구현하기--1\" href=\"#주문화면-구현하기--1\"></a></h1>\n<p>첫번째 테스트로 보았던 주문화면 구현과정을 써보고자 한다. (스토리보드 영역은 제외, )</p>\n<p><img src=\"/image/firstTest.png\" alt=\"이미지\" class=\"φcx\"></p>\n<p>구현사항은 아래와 같다.</p>\n<h3 id=\"구현사항\">구현사항<a title=\"#구현사항\" href=\"#구현사항\"></a></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">주문 버튼 터치 시 각 아이템에 대한 수량 증가</span><br><span class=\"line\">각 아이템별 주문 수량 증가에 따른 결제금액 증가</span><br><span class=\"line\">결제 진행 시 소지금액에서 결제금액만큼 차감 및 주문수량 초기화</span><br><span class=\"line\">소지금액이 결제금액보다 적은 경우 결제 불가 메시지 Alert 띄우기</span><br><span class=\"line\">초기화 버튼은 주문수량, 결제금액, 소지금액을 모두 초기화</span><br><span class=\"line\">초기화 버튼 이외에 한 번 올린 주문수량을 내리는 기능은 없음</span><br></pre></td></tr></table></figure>\n<h2 id=\"0.-frame짜기\">0. frame짜기<a title=\"#0.-frame짜기\" href=\"#0.-frame짜기\"></a></h2>\n<p>구현하기 이전에 먼저 code로 프레임을 짜는 영역이 있어 프레임부터 만든다.</p>\n<p>0-1. 레이블 프레임을 view에 만들기</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;소지금 Label</span><br><span class=\"line\"> let sojiLabel &#x3D; UILabel()</span><br><span class=\"line\"> sojiLabel.frame &#x3D; CGRect(x: 30 , y: 330, width: UI.labelWidth, height: UI.containerHeight)</span><br><span class=\"line\"> sojiLabel.textAlignment &#x3D; .center</span><br><span class=\"line\"> sojiLabel.backgroundColor &#x3D; .green</span><br><span class=\"line\"> sojiLabel.textColor &#x3D; .black</span><br><span class=\"line\"> sojiLabel.text &#x3D; &quot;소지금&quot;</span><br><span class=\"line\"> view.addSubview(sojiLabel)</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> let sojiCost &#x3D; UILabel()</span><br><span class=\"line\"> sojiCost.frame &#x3D; CGRect(x: 120 , y: 330, width: UI.labelWidth+54, height: UI.containerHeight)</span><br><span class=\"line\"> sojiCost.textAlignment &#x3D; .right</span><br><span class=\"line\"> sojiCost.backgroundColor &#x3D; .green</span><br><span class=\"line\"> sojiCost.textColor &#x3D; .black</span><br><span class=\"line\"> sojiCost.text &#x3D; &quot;70000원&quot;</span><br><span class=\"line\"> view.addSubview(sojiCost)</span><br></pre></td></tr></table></figure>\n<p>&quot;sojiLabel.frame&quot;의 width: UI.labelWidth 부분은 구조체를 따로 만들어 해당값을 복사하는 방식으로 만들었다.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">UI</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">let</span> containerHeight: <span class=\"type\">CGFloat</span> = <span class=\"number\">40</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">let</span> displayLabelWidth: <span class=\"type\">CGFloat</span> = <span class=\"number\">140</span></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">let</span> labelWidth: <span class=\"type\">CGFloat</span> = <span class=\"number\">80</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>0-2. 위와 동일한 방법으로 버튼도 만든다.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//초기화버튼</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> setupButton = <span class=\"type\">UIButton</span>()</span><br><span class=\"line\">  setupButton.frame = <span class=\"type\">CGRect</span>(x: <span class=\"number\">265</span>, y: <span class=\"number\">330</span>, width: <span class=\"type\">UI</span>.labelWidth, height: <span class=\"type\">UI</span>.containerHeight)</span><br><span class=\"line\">  setupButton.backgroundColor = .black</span><br><span class=\"line\">  setupButton.setTitleColor(.orange, <span class=\"keyword\">for</span>: .normal)</span><br><span class=\"line\">  setupButton.setTitle(<span class=\"string\">\"초기화\"</span>, <span class=\"keyword\">for</span>: .normal)</span><br><span class=\"line\">  view.addSubview(setupButton)</span><br><span class=\"line\">  </span><br><span class=\"line\">  setupButton.addTarget(<span class=\"keyword\">self</span>, action: #selector(setupButtonClicked), <span class=\"keyword\">for</span>: .touchUpInside)</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//결제하기 버튼</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> buyButton = <span class=\"type\">UIButton</span>()</span><br><span class=\"line\">  buyButton.frame = <span class=\"type\">CGRect</span>(x: <span class=\"number\">265</span>, y: <span class=\"number\">370</span>, width: <span class=\"type\">UI</span>.labelWidth, height: <span class=\"type\">UI</span>.containerHeight)</span><br><span class=\"line\">  buyButton.backgroundColor = .black</span><br><span class=\"line\">  buyButton.setTitle(<span class=\"string\">\"결제하기\"</span>, <span class=\"keyword\">for</span>: .normal)</span><br><span class=\"line\">  buyButton.setTitleColor(.orange, <span class=\"keyword\">for</span>: .normal)</span><br><span class=\"line\">  view.addSubview(buyButton)</span><br><span class=\"line\">  </span><br><span class=\"line\">  buyButton.addTarget(<span class=\"keyword\">self</span>, action: #selector(buyButtonClicked), <span class=\"keyword\">for</span>: .touchUpInside)</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>다른 점이 있다면, 레이블은 addTaget이 필요없지만, Button은 필요하다(textField도 동일). Lable은 타겟해서 딱히 할게 없기 때문이다… 버튼 타입은 .touchUpInside로 해준다. (버튼을 눌렀을때 동작)</p>\n<p><img src=\"/image/first-1.png\" alt=\"이미지\" class=\"φcx\"></p>\n<p>그럼 이정도는 나온다.</p>\n<h2 id=\"1.-변수만들기\">1. 변수만들기<a title=\"#1.-변수만들기\" href=\"#1.-변수만들기\"></a></h2>\n<p>1-1. 변수가 필요한 Label은 아웃렛으로 연결한다.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@IBOutlet</span> <span class=\"keyword\">var</span> jangCountLabel: <span class=\"type\">UILabel!</span></span><br><span class=\"line\"><span class=\"meta\">@IBOutlet</span> <span class=\"keyword\">var</span> bongCountLabel: <span class=\"type\">UILabel!</span></span><br><span class=\"line\"><span class=\"meta\">@IBOutlet</span> <span class=\"keyword\">var</span> tangCountLabel: <span class=\"type\">UILabel!</span></span><br></pre></td></tr></table></figure>\n<p>1-2. 초기값이 필요한 변수를 파악하고, 초기값을 넣는다.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//짜장,짬뽕,탕수육 가격</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> jangCost = <span class=\"number\">5000</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> bongCost = <span class=\"number\">6000</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> tangCost = <span class=\"number\">12000</span></span><br></pre></td></tr></table></figure>\n<p>1-3. 값이 바뀔만한 변수는 didset으로 설정한다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;각 수량 변수 didset으로 담기</span><br><span class=\"line\">var jangCount: Int &#x3D; 0&#123;</span><br><span class=\"line\">  didSet &#123;</span><br><span class=\"line\">    jangCountLabel.text &#x3D; &quot;\\(jangCount)&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var bongCount: Int &#x3D; 0 &#123;</span><br><span class=\"line\">  didSet &#123;</span><br><span class=\"line\">    bongCountLabel.text &#x3D; &quot;\\(bongCount)&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var tangCount: Int &#x3D; 0 &#123;</span><br><span class=\"line\">  didSet &#123;</span><br><span class=\"line\">    tangCountLabel.text &#x3D; &quot;\\(tangCount)&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>주문 버튼 터치 시 레이블에 대한 수량 증가가 필요하므로, &quot;jangCountLabel.text&quot;값이 &quot;(jangCount)&quot;로 바뀌게 한다.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(참고)</span><br><span class=\"line\">jangCount: 짜장면 수량</span><br><span class=\"line\">bongCount: 짬뽕 수량</span><br><span class=\"line\">tangCount: 탕수육 수량 </span><br><span class=\"line\">jangCountLabel.text: 짜장면 수량 레이블.text</span><br><span class=\"line\">bongCountLabel.text: 짬뽕 수량 레이블.text</span><br><span class=\"line\">tangCountLabel.text: 탕수육 수량 레이블.text</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//소지금액 변수</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> sojiPay: <span class=\"type\">Int</span> = <span class=\"number\">70000</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">didSet</span> &#123;</span><br><span class=\"line\">    sojiCost.text = <span class=\"string\">\"\\(sojiPay)원\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//결제금액 변수</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> buyPay: <span class=\"type\">Int</span> = <span class=\"number\">0</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">didSet</span> &#123;</span><br><span class=\"line\">  buyCost.text = <span class=\"string\">\"\\(buyPay)원\"</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>*소지금액(sojePay)*과 *결제금액(buyPay)*에 대한 변수도 지정한다.<br>\n소지금액은 70000원의 초기값으로 설정하고, 결제금액은 메뉴의 수량에 따라 변동하므로.</p>\n<p>1-4. 주문버튼을 누르면 수량이 증가하도록 만든다.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//주문 버튼 3개</span></span><br><span class=\"line\">  <span class=\"meta\">@IBAction</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">jangOder</span><span class=\"params\">(<span class=\"number\">_</span> sender: <span class=\"keyword\">Any</span>)</span></span> &#123;</span><br><span class=\"line\">    jangCount += <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"meta\">@IBAction</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">bongOder</span><span class=\"params\">(<span class=\"number\">_</span> sender: <span class=\"keyword\">Any</span>)</span></span> &#123;</span><br><span class=\"line\">    bongCount += <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"meta\">@IBAction</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">tangOder</span><span class=\"params\">(<span class=\"number\">_</span> sender: <span class=\"keyword\">Any</span>)</span></span> &#123;</span><br><span class=\"line\">    tangCount += <span class=\"number\">1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>버튼을 누르고 증가한 카운트가 레이블에 적용될 수 있도록. 그럼 <s>1.주문 버튼 터치 시 각 아이템에 대한 수량 증가</s>는 이걸로 완료됐다.</p>\n<h2 id=\"2.-계산메소드-만들기.\">2. 계산메소드 만들기.<a title=\"#2.-계산메소드-만들기.\" href=\"#2.-계산메소드-만들기.\"></a></h2>\n<p>각 아이템별 주문 수량 증가에 따른 결제금액 증가가 필요하다.</p>\n<p>2-1. 수량에 따라 짜장면+짬뽕+탕수육의 가격을 모두 더해줄 함수 필요.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//현재 결제금액을 계산하는 메소드</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">calcPrice</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (jangCount * jangCost) + (bongCount * bongCost) + (tangCount * tangCost)</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&quot;calcPrice()&quot;는 (짜장면 x 수량) + (짬뽕 x 수량) + (탕수육 x 수량)<br>\n이것은 <em>결제금액</em>레이블에 에 담겨야할 값이기도 하다. 또, 이 함수가 어느 메뉴의 수량이 올라갈 때마다 계산될 수 있도록 이전에(1-3) 써놓은 변수의 didset에 넣어준다. 그러면 다음과 같이 입력된다.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//각 수량 변수 didset으로 담기</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> jangCount: <span class=\"type\">Int</span> = <span class=\"number\">0</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">didSet</span> &#123;</span><br><span class=\"line\">    jangCountLabel.text = <span class=\"string\">\"\\(jangCount)\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    buyPay = calcPrice() <span class=\"comment\">//결제금액 = 현재 결제금액을 계산하는 메소드()</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bongCount: <span class=\"type\">Int</span> = <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">didSet</span> &#123;</span><br><span class=\"line\">    bongCountLabel.text = <span class=\"string\">\"\\(bongCount)\"</span></span><br><span class=\"line\">   buyPay = calcPrice()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> tangCount: <span class=\"type\">Int</span> = <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">didSet</span> &#123;</span><br><span class=\"line\">    tangCountLabel.text = <span class=\"string\">\"\\(tangCount)\"</span></span><br><span class=\"line\">     buyPay = calcPrice()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>수량이 증가할 때마다, 결제금액(buyPay)이 현재 결제금액(calcPrice())을 계산하는 메소드를 호출한다.<br>\n그러면 <s>2.각 아이템별 주문 수량 증가에 따른 결제금액 증가</s>는 완료되었다.</p>\n<p><img src=\"/image/first-2.png\" alt=\"이미지\" class=\"φcx\"></p>\n<h2 id=\"3.-전달값-초기화와-결제금액-차감-구현\">3. 전달값 초기화와 결제금액 차감 구현<a title=\"#3.-전달값-초기화와-결제금액-차감-구현\" href=\"#3.-전달값-초기화와-결제금액-차감-구현\"></a></h2>\n<p>결제 진행 시 소지금액에서 결제금액만큼 차감 및 주문수량 초기화가 필요하다.</p>\n<p>3-1.먼저 초기화부터 보자면, 초기화버튼을 눌렀을 때, 실행될 수 있도록 초기화Button아래에 변수를 재지정해준다.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@objc</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">setupButtonClicked</span><span class=\"params\">(<span class=\"number\">_</span> sender: UIButton)</span></span> &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  jangCount = <span class=\"number\">0</span> <span class=\"comment\">//수량</span></span><br><span class=\"line\">  bongCount = <span class=\"number\">0</span> <span class=\"comment\">//수량</span></span><br><span class=\"line\">  tangCount = <span class=\"number\">0</span> <span class=\"comment\">//수량</span></span><br><span class=\"line\">  buyPay = <span class=\"number\">0</span>  <span class=\"comment\">//결제금액</span></span><br><span class=\"line\">  sojiPay = <span class=\"number\">70000</span> <span class=\"comment\">//소지금액</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>초기화버튼을 누르면 수량과, 결제금액, 소지금액 모두 초기값으로 진행되는 코드.</p>\n<p>3-2. 소지금 - 결제금액 계산(차감되는 것)</p>\n<p>소지금은 70000원으로 고정되어있지만 결제금액은 수량에 따라 변동되는 값이고, 최종적으로 <em>결제</em>를 하게 되면 소지금에서 결제금액이 빠져나가야 하는 방식이다.</p>\n<p>그러면,<br>\n<code>소지금 = 소지금 - 결제금액</code></p>\n<p>일텐데, 결제금액 차감부분은 alert에서  해당기능을 넣어야 하는 사항이기 때문에,  뒤의 포스프의 alert 부분을  참고하자. alert 먼저 만든후 확인/취소에 따라 결제금액이 차감되어야하기 때문.</p>\n","next":{"title":"[Swift]주문화면 구현하기-feedback","link":"2020/05/05/Swift-주문화면-구현하기-feedback"},"plink":"https://Qussk.github.io/2020/05/06/Swift-주문화면-구현하기-1/","toc":[{"id":"주문화면-구현하기--1","title":"주문화면 구현하기 -1","index":"1","children":[{"id":"구현사항","title":"구현사항","index":"1.1"}]},{"id":"0.-frame짜기","title":"0. frame짜기","index":"2"},{"id":"1.-변수만들기","title":"1. 변수만들기","index":"3"},{"id":"2.-계산메소드-만들기.","title":"2. 계산메소드 만들기.","index":"4"},{"id":"3.-전달값-초기화와-결제금액-차감-구현","title":"3. 전달값 초기화와 결제금액 차감 구현","index":"5"}]}