{"title":"[Swift]CollectionViewCell에 애니메이션 주기(CAAnimation)","date":"2020-07-08T09:07:48.000Z","date_formatted":{"ll":"Jul 8, 2020","L":"07/08/2020","MM-DD":"07-08"},"thumbnail":"/image/acani.png","link":"2020/07/08/Swift-CollectionViewCell에-애니메이션-주기","tags":["CAAnimation","Swift","UICollectionView"],"categories":["ios"],"updated":"2020-09-14T08:28:54.118Z","content":"<p>Cell에는 애니메이션 못주나?</p>\n<p>라는 생각하나로…</p>\n<p>CollectionViewCell에 animation을 주는 방법을 찾다가,</p>\n<p>레이어 상태 간의 애니메이션 전환을 주는 CATransition을 발견했다!</p>\n<p>🥺</p>\n<p>바로 구현 고고</p>\n<h3 id=\"animationutility.swift\">AnimationUtility.swift<a title=\"#animationutility.swift\" href=\"#animationutility.swift\"></a></h3>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> UIKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AnimationUtility</span>: <span class=\"title\">UIViewController</span>, <span class=\"title\">CAAnimationDelegate</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">let</span> kSlideAnimationDuration: <span class=\"type\">CFTimeInterval</span> = <span class=\"number\">0.5</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewSlideInFromRight</span><span class=\"params\">(toLeft views: UIView)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> transition: <span class=\"type\">CATransition?</span> = <span class=\"literal\">nil</span></span><br><span class=\"line\">    transition = <span class=\"type\">CATransition</span>.<span class=\"keyword\">init</span>()</span><br><span class=\"line\">    transition?.duration = kSlideAnimationDuration</span><br><span class=\"line\">    transition?.timingFunction = <span class=\"type\">CAMediaTimingFunction</span>(name: <span class=\"type\">CAMediaTimingFunctionName</span>.easeInEaseOut)</span><br><span class=\"line\">    transition?.type = <span class=\"type\">CATransitionType</span>.push</span><br><span class=\"line\">    transition?.subtype = <span class=\"type\">CATransitionSubtype</span>.fromRight</span><br><span class=\"line\">    <span class=\"comment\">//transition?.delegate = (self as! CAAnimationDelegate)</span></span><br><span class=\"line\">    views.layer.add(transition!, forKey: <span class=\"literal\">nil</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewSlideInFromLeft</span><span class=\"params\">(toRight views: UIView)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> transition: <span class=\"type\">CATransition?</span> = <span class=\"literal\">nil</span></span><br><span class=\"line\">    transition = <span class=\"type\">CATransition</span>.<span class=\"keyword\">init</span>()</span><br><span class=\"line\">    transition?.duration = kSlideAnimationDuration</span><br><span class=\"line\">    transition?.timingFunction = <span class=\"type\">CAMediaTimingFunction</span>(name: <span class=\"type\">CAMediaTimingFunctionName</span>.easeInEaseOut)</span><br><span class=\"line\">    transition?.type = <span class=\"type\">CATransitionType</span>.push</span><br><span class=\"line\">    transition?.subtype = <span class=\"type\">CATransitionSubtype</span>.fromLeft</span><br><span class=\"line\"> <span class=\"comment\">//   transition?.delegate = (self as! CAAnimationDelegate)</span></span><br><span class=\"line\">    views.layer.add(transition!, forKey: <span class=\"literal\">nil</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewSlideInFromTop</span><span class=\"params\">(toBottom views: UIView)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> transition: <span class=\"type\">CATransition?</span> = <span class=\"literal\">nil</span></span><br><span class=\"line\">    transition = <span class=\"type\">CATransition</span>.<span class=\"keyword\">init</span>()</span><br><span class=\"line\">    transition?.duration = kSlideAnimationDuration</span><br><span class=\"line\">    transition?.timingFunction = <span class=\"type\">CAMediaTimingFunction</span>(name: <span class=\"type\">CAMediaTimingFunctionName</span>.easeInEaseOut)</span><br><span class=\"line\">    transition?.type = <span class=\"type\">CATransitionType</span>.push</span><br><span class=\"line\">    transition?.subtype = <span class=\"type\">CATransitionSubtype</span>.fromBottom</span><br><span class=\"line\"><span class=\"comment\">//transition?.delegate = (self as! CAAnimationDelegate)</span></span><br><span class=\"line\">    views.layer.add(transition!, forKey: <span class=\"literal\">nil</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">viewSlideInFromBottom</span><span class=\"params\">(toTop views: UIView)</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> transition: <span class=\"type\">CATransition?</span> = <span class=\"literal\">nil</span></span><br><span class=\"line\">    transition = <span class=\"type\">CATransition</span>.<span class=\"keyword\">init</span>()</span><br><span class=\"line\">    transition?.duration = kSlideAnimationDuration</span><br><span class=\"line\">    transition?.timingFunction = <span class=\"type\">CAMediaTimingFunction</span>(name: <span class=\"type\">CAMediaTimingFunctionName</span>.easeInEaseOut)</span><br><span class=\"line\">    transition?.type = <span class=\"type\">CATransitionType</span>.push</span><br><span class=\"line\">    transition?.subtype = <span class=\"type\">CATransitionSubtype</span>.fromTop</span><br><span class=\"line\">  <span class=\"comment\">//  transition?.delegate = (self as! CAAnimationDelegate)</span></span><br><span class=\"line\">    views.layer.add(transition!, forKey: <span class=\"literal\">nil</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>CATransition : 레이어 상태 간 애니메이션 전환을 제공하는 객체. 기본 전환은 크로스 페이드이지만 사전 정의 된 전환 세트와 다른 효과를 지정할 수 있다.</li>\n<li>CAMediaTimingFunction : 애니메이션의 간격의 타이밍 기능. 곡선으로 정의하는 함수의 한 세그먼트를 나타낸다. 이 함수는 범위 [0,1]과 출력 시간에 매핑 [0,1].</li>\n<li>easeInEaseOut :  애니메이션이 느리게 시작하고 지속 시간 동안 가속 된 다음 완료하기 전에 다시 느리게함 (아래 그림 참고)</li>\n<li>subtype은 어디로부터? 올지 설정하는 것 같다. (아니면 기존 레이아웃 위치?)</li>\n</ul>\n<p><img src=\"/image/easeInEaseOut.png\" alt=\"\" class=\"φcx\"></p>\n<h3 id=\"cellforitemat에-animate-코드추가\">cellForItemAt에 animate 코드추가<a title=\"#cellforitemat에-animate-코드추가\" href=\"#cellforitemat에-animate-코드추가\"></a></h3>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// MARK: UICollectionViewDataSource</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">MainViewController</span>: <span class=\"title\">UICollectionViewDataSource</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">collectionView</span><span class=\"params\">(<span class=\"number\">_</span> collectionView: UICollectionView, numberOfItemsInSection section: Int)</span></span> -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">    <span class=\"number\">4</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">collectionView</span><span class=\"params\">(<span class=\"number\">_</span> collectionView: UICollectionView, cellForItemAt indexPath: IndexPath)</span></span> -&gt; <span class=\"type\">UICollectionViewCell</span> &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">let</span> cell = collectionView.dequeueReusableCell(withReuseIdentifier: <span class=\"string\">\"CollectionCell\"</span>, <span class=\"keyword\">for</span>: indexPath) <span class=\"keyword\">as</span>! <span class=\"type\">MainCollectionViewCell</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> !cell.isAnimated &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"type\">UIView</span>.animate(withDuration: <span class=\"number\">0.5</span>, delay: <span class=\"number\">0.5</span> * <span class=\"type\">Double</span>(indexPath.row), usingSpringWithDamping: <span class=\"number\">1</span>, initialSpringVelocity: <span class=\"number\">0.5</span>, options: indexPath.row % <span class=\"number\">2</span> == <span class=\"number\">0</span> ? .transitionFlipFromLeft : .transitionFlipFromRight, animations: &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> indexPath.row % <span class=\"number\">2</span> == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">          <span class=\"type\">AnimationUtility</span>.viewSlideInFromLeft(toRight: cell)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"type\">AnimationUtility</span>.viewSlideInFromRight(toLeft: cell)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">      &#125;, completion: &#123; (done) <span class=\"keyword\">in</span></span><br><span class=\"line\">        cell.isAnimated = <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cell.backgroundColor = .clear</span><br><span class=\"line\">    cell.mainImageView.image = <span class=\"type\">UIImage</span>(named: images[indexPath.item])</span><br><span class=\"line\">    cell.mainTitleImage.image = <span class=\"type\">UIImage</span>(named: <span class=\"string\">\"cardShadow\"</span>)</span><br><span class=\"line\">    cell.titlteLable.text = titleData[indexPath.item]</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> cell</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>코드는 stackoverflow를 참고 했다!</p>\n<p>옛날 코드라서 바뀐 게 좀 있었지만 문제 없는 정도였다!..</p>\n<p><a href=\"https://stackoverflow.com/questions/49387620/animate-collection-view-cells\" target=\"_blank\">참고링크 - stackoverflow</a></p>\n<h3 id=\"완성된-모습\">완성된 모습<a title=\"#완성된-모습\" href=\"#완성된-모습\"></a></h3>\n<p>4가지 게임이 보이는 메인화면에 적용!</p>\n<p><a href=\"https://www.youtube.com/watch?v=f2uHaIQeQYw&amp;lc=UgzvZkYN3GBFMesltn94AaABAg\" target=\"_blank\">[영상보기]</a></p>\n","prev":{"title":"[Swift]Cell에 shadow주기","link":"2020/07/08/Swift-Cell에-shadow주기"},"next":{"title":"[Swift]Gesture 이해하기","link":"2020/06/25/Swift-Gesture-이해하기-2"},"plink":"https://Qussk.github.io/2020/07/08/Swift-CollectionViewCell에-애니메이션-주기/","toc":[{"id":"animationutility.swift","title":"AnimationUtility.swift","index":"1"},{"id":"cellforitemat에-animate-코드추가","title":"cellForItemAt에 animate 코드추가","index":"2"},{"id":"완성된-모습","title":"완성된 모습","index":"3"}]}