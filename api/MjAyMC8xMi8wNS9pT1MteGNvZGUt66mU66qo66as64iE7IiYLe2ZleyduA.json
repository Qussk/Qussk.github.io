{"title":"[iOS]xcode 메모리누수 확인","date":"2020-12-05T10:31:42.000Z","date_formatted":{"ll":"Dec 5, 2020","L":"12/05/2020","MM-DD":"12-05"},"thumbnail":"/image/vi10.png","link":"2020/12/05/iOS-xcode-메모리누수-확인","tags":["iOS","메모리누수"],"categories":["ios"],"updated":"2020-12-05T02:09:58.312Z","content":"<p>앱에서 메모리가 필요하면, 시스템에서 메모리 페이지를 줌. 이 페이지에는 여러 객체들이 저장되는 데, 큰 용량의 객체는 여러 페이지에 걸쳐서 존재할 수도 있음. 한 페이지는 16KB정도이고, 각 페이지는 write한 적이 있는지에 따라 Clean 또는 Dirty 메모리로 나뉨.</p>\n<h2 id=\"xcode의-meomoty-graph-debugger활용\">Xcode의 Meomoty Graph Debugger활용<a title=\"#xcode의-meomoty-graph-debugger활용\" href=\"#xcode의-meomoty-graph-debugger활용\"></a></h2>\n<p><img src=\"/image/vi7.png\" alt=\"\" class=\"φcx\"></p>\n<p>Xcode Debug Navigator의 Memory를 선택하면, 현재 앱의 메모리 Footprint를 볼 수 있음. 앱 전체 메모리 사이즈에 대한 그래프를 &quot;실시간&quot;으로 보여줌.</p>\n<p><img src=\"https://seizze.github.io/assets/img/2019-12-20-iOS-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EB%9C%AF%EC%96%B4%EB%B3%B4%EA%B8%B0,-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%9D%B4%EC%8A%88-%EB%94%94%EB%B2%84%EA%B9%85%ED%95%98%EA%B8%B0,-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EB%A6%AD-%EC%B0%BE%EA%B8%B0/view-memgraph.png\" alt=\"\" class=\"φcx\"></p>\n<p>해당 버튼을 누르게 되면 현재 상태에서 메모리 snapshot을 찍게 되고, 이 snapshot의 메모리 정보를 보여주는 Memory Graph Debugger가 나타남.</p>\n<p><img src=\"/image/vi9.png\" alt=\"\" class=\"φcx\"></p>\n<p>이런식으로 왼쪽 패널에서 객체들 중 하나를 선택하면, 해당 객체를 메모리에 유지되도록 하는 래퍼런스들, 즉 해당 객체를 가리키고 있는 객체들이 그래프로 나타남.</p>\n<p><img src=\"/image/vi10.png\" alt=\"\" class=\"φcx\"></p>\n<p>여기서 검정 선은 강한 참조(Strong)를, 회색 선은 unknown(weak또는 strong)레퍼런스를 나타냄.</p>\n<p>메모리 그래프 디버거는 간단한 메모리 릭은 자동으로 탐지 할 수 있음. 메모리 릭이 발견되면 보라색 ! 마크로 경로를 띄워줌. 클릭하면 메모리 릭이 일어난 인스턴스를 확인할 수 있음.</p>\n<p><img src=\"https://seizze.github.io/assets/img/2019-12-20-iOS-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EB%9C%AF%EC%96%B4%EB%B3%B4%EA%B8%B0,-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%9D%B4%EC%8A%88-%EB%94%94%EB%B2%84%EA%B9%85%ED%95%98%EA%B8%B0,-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EB%A6%AD-%EC%B0%BE%EA%B8%B0/memory-leak.png\" alt=\"\" class=\"φcx\"></p>\n<p>하지만 메모리릭을 알려주는 것보다, 직접 찾아내야하는 경우가 더 많음.</p>\n<h2 id=\"command-line-tool활용\">Command Line Tool활용<a title=\"#command-line-tool활용\" href=\"#command-line-tool활용\"></a></h2>\n<p>터미널 상에서 해당 앱의 메모리 상태를 확인 할 수도 있음</p>\n<p>Xcode에서 메모리 그래프 디버거를 킨 상태에서 File &gt; Export MEmort Grapg…를 선택하여 현재의 메모리 스탭샷을 파일로 저장함.</p>\n<p><img src=\"/image/vi8.png\" alt=\"\" class=\"φcx\"></p>\n<p>원하는 위치에 파일 만들어짐.</p>\n<p>해당 위치로 이동하여,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vmmap --summary</span><br></pre></td></tr></table></figure>\n<p>후 탭 누르고 해당 memgrahp파일을 선택함.</p>\n<p><strong>예시</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vmmap --summary weatherPutOn\\[16625\\].memgraph</span><br></pre></td></tr></table></figure>\n<p><img src=\"/image/vi1.png\" alt=\"\"><br>\n<img src=\"/image/vi2.png\" alt=\"\"></p>\n<p>이런식으로 메모리에 할당된 공간을 조회할 수 있음.</p>\n<p>가상 메모리 공간 사이즈, Dirty인 영역 등을 나누어 출력해줌.<br>\nSwapped Size는 iOS에서는 Compressed Size를 의미.<br>\n주의 점은 Memory compressor에 의해 압축되기 전의 사이즈를 의미함.</p>\n<p>–summary없이 vmmap명령어만 사용하면 프로그램의 텍스트와 실행코드 영역, 힙영역등의 모든 가상 메모리 영역의 컨텐츠를 보여줌.</p>\n<p><strong>&lt;참고&gt;전체 공간 보기</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vmmap app이름.memgraph</span><br></pre></td></tr></table></figure>\n<h3 id=\"leak만-보기\">leak만 보기<a title=\"#leak만-보기\" href=\"#leak만-보기\"></a></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">leaks App이름.memgraph</span><br></pre></td></tr></table></figure>\n<p><img src=\"/image/vi4.png\" alt=\"\" class=\"φcx\"></p>\n<p>릭이 없다 !</p>\n<h3 id=\"heap만-보기\">heap만 보기<a title=\"#heap만-보기\" href=\"#heap만-보기\"></a></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">heap App이름.memgraph</span><br></pre></td></tr></table></figure>\n<p><img src=\"/image/vi5.png\" alt=\"\" class=\"φcx\"></p>\n<p><img src=\"/image/vi3.png\" alt=\"\" class=\"φcx\"></p>\n<p><strong>heap 사이즈별로 정렬</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">heap --sortBySize App이름.memgraph</span><br></pre></td></tr></table></figure>\n<p><img src=\"/image/vi6.png\" alt=\"\" class=\"φcx\"></p>\n<p><strong>추가</strong></p>\n<h3 id=\"malloc_history\">malloc_history<a title=\"#malloc_history\" href=\"#malloc_history\"></a></h3>\n<p><img src=\"https://github.com/Qussk/RxSwift/raw/main/image/t1.png?raw=true\" alt=\"\" class=\"φcx\"></p>\n<p>malloc Stack Logging에 체크 되어있으면 history도 확인 가능하다고 함 !!</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">malloc_history</span><br></pre></td></tr></table></figure>\n<p><strong>참고자료</strong><br>\n<a href=\"https://medium.com/zendesk-engineering/ios-identifying-memory-leaks-using-the-xcode-memory-graph-debugger-e84f097b9d15\" target=\"_blank\">iOS — Xcode 메모리 그래프 디버거를 사용하여 메모리 누수 식별</a><br>\n<a href=\"https://doordash.engineering/2019/05/22/ios-memory-leaks-and-retain-cycle-detection-using-xcodes-memory-graph-debugger/\" target=\"_blank\">Xcode의 메모리 그래프 디버거를 사용하여 iOS 메모리 누수를 감지하고주기를 유지하는 방법<br>\n</a></p>\n","prev":{"title":"프로토콜 지향 - POP 장점","link":"2020/12/20/프로토콜-지향-POP-장점"},"next":{"title":"RxSwift와 Combin의 차이","link":"2020/11/11/RxSwift와-Combin의-차이"},"plink":"https://Qussk.github.io/2020/12/05/iOS-xcode-메모리누수-확인/","toc":[{"id":"xcode의-meomoty-graph-debugger활용","title":"Xcode의 Meomoty Graph Debugger활용","index":"1"},{"id":"command-line-tool활용","title":"Command Line Tool활용","index":"2","children":[{"id":"leak만-보기","title":"leak만 보기","index":"2.1"},{"id":"heap만-보기","title":"heap만 보기","index":"2.2"},{"id":"malloc_history","title":"malloc_history","index":"2.3"}]}]}