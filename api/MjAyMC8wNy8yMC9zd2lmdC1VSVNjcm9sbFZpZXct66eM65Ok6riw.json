{"title":"[swift]UIScrollView 만들기","date":"2020-07-20T16:12:35.000Z","date_formatted":{"ll":"Jul 20, 2020","L":"07/20/2020","MM-DD":"07-20"},"thumbnail":"image/scroll.png","link":"2020/07/20/swift-UIScrollView-만들기","tags":["Swift","UIScrollView"],"categories":["ios"],"updated":"2020-07-20T08:25:47.009Z","content":"<p>앱을 이용하면서 자주접하는 scrollview를 공부해보자.</p>\n<p>scrollview가 까다로운게, 부모뷰가 자식뷰의 크기를 따라가는 속성이라 자식뷰의 프레임과 통일성이 굉장히 중요해진다.</p>\n<p>이것을 frame으로 잡는 방법이 있고 autolay 아웃으로 잡는 방법이 있는데</p>\n<p>2가지 다 알아보는 걸로 ㅋㅋ</p>\n<h2 id=\"frame-이용\">frame 이용<a title=\"#frame-이용\" href=\"#frame-이용\"></a></h2>\n<h3 id=\"주의점.\">주의점.<a title=\"#주의점.\" href=\"#주의점.\"></a></h3>\n<p><img src=\"/iamge/scroll1.png\" alt=\"\" class=\"φcx\"></p>\n<p>red -&gt; ScrollView<br>\nwhigt -&gt; ImageView</p>\n<p>보기에 잘나온 것 같지만, 부모뷰(ScrollView)가 자식뷰(imageView)보다 더 큰 경우라서, 위처럼 구현되면 자식뷰들이 부모뷰의 범위만큼 자유자재로 움직일 수 있게 된다.</p>\n<p>보통 자식뷰가 움직이는 것보다는 고정되도록 구현하니까…</p>\n<p><img src=\"/image/scroll4.png\" alt=\"\" class=\"φcx\"></p>\n<p>이런식으로 풀화면 채워야한다.<br>\n그리고 총 3개의 그림을 스크롤 하도록…</p>\n<h3 id=\"1.선언\">1.선언<a title=\"#1.선언\" href=\"#1.선언\"></a></h3>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">lazy</span> <span class=\"keyword\">var</span> scrollView = <span class=\"type\">UIScrollView</span>()</span><br><span class=\"line\"><span class=\"keyword\">var</span> scrollFrame = <span class=\"type\">CGRect</span>(x: <span class=\"number\">0</span>, y: <span class=\"number\">0</span>, width: <span class=\"number\">0</span>, height: <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> images = [<span class=\"string\">\"naver\"</span>,<span class=\"string\">\"instagram\"</span>,<span class=\"string\">\"naver\"</span>] <span class=\"comment\">//이미지이름</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2.frame잡기\">2.frame잡기<a title=\"#2.frame잡기\" href=\"#2.frame잡기\"></a></h3>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrollView.contentSize = <span class=\"type\">CGSize</span>(width: <span class=\"number\">375</span> * <span class=\"number\">3</span>, height: scrollView.frame.height)</span><br><span class=\"line\">   scrollView.delegate = <span class=\"keyword\">self</span></span><br><span class=\"line\">   scrollView.isPagingEnabled = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\">// scrollView.backgroundColor = .red</span></span><br><span class=\"line\">   view.addSubview(scrollView)</span><br><span class=\"line\">```   </span><br><span class=\"line\"><span class=\"number\">2</span>-<span class=\"number\">1</span>.  **scrollView.contentSize**는 width가 <span class=\"number\">275</span>인 이미지가 <span class=\"number\">3</span>개 들어간다는 의미로 * <span class=\"number\">3</span>을 해주었다. height는 scrollView에 맞춤. </span><br><span class=\"line\"><span class=\"number\">2</span>-<span class=\"number\">1</span>. **isPagingEnabled**는 스크롤 할때 페이지값으로 프레임이 정확하게 이동하는 것</span><br><span class=\"line\"></span><br><span class=\"line\">### <span class=\"number\">3</span>. <span class=\"type\">ScrollView</span>에 들어갈 이미지의 size지정. </span><br><span class=\"line\"></span><br><span class=\"line\">```swift</span><br><span class=\"line\"><span class=\"comment\">//MARK:-ScrollView</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">setScrollView</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> images.<span class=\"built_in\">indices</span> &#123;</span><br><span class=\"line\">    scrollFrame.origin.x = view.frame.width * <span class=\"type\">CGFloat</span>(index)</span><br><span class=\"line\">    scrollFrame.size = scrollView.frame.size</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> descriptionImage = <span class=\"type\">UIImageView</span>()</span><br><span class=\"line\">    descriptionImage.image = <span class=\"type\">UIImage</span>(named: images[index])</span><br><span class=\"line\">    descriptionImage.frame = <span class=\"type\">CGRect</span>(x: scrollFrame.origin.x, y: <span class=\"number\">0</span>, width: <span class=\"number\">375</span>, height: <span class=\"number\">430</span>)</span><br><span class=\"line\">    scrollView.addSubview(descriptionImage)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3-1. <strong>images.indices</strong> 이미지를 순차적으로 넣는다.<br>\n3-2. image의 사이즈</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">descriptionImage.frame &#x3D; CGRect(x: scrollFrame.origin.x, y: 0, width: 375, height: 430)</span><br></pre></td></tr></table></figure>\n<p>그러면 이미지가 scrollView의 크기와 맞게 잘 돌아가는 화면을 확인 할 수 있다.</p>\n<p>스크롤 방향은 콜렉션뷰처럼 호라이즌, 버티컬로 지정해주는 게 아니라,<br>\nscrollview가 지정범위를 주고, 자식뷰의 크기에 따라서 스크롤 해주는 개념이다.<br>\n그래서 자식뷰가 width를 늘리면서 가는지, height를 늘리면서 가는지에 따라 결정된다.</p>\n<p>fram이 정확한 값을 부여하기 쉬워서 오토레이아웃보다는 안정성 면에서 좋은 것 같지만, 나는 오토레이아웃 쟁이이니까.</p>\n<p>그리고, 위/아래로 스크롤 되는 것이 오토레이아웃이 더 쉬울것 같아서 아래의 방법처럼 해보았다.</p>\n<p>(사실 삽질 엄청 많이함.)</p>\n<h2 id=\"autolayout-이용\">autoLayout 이용<a title=\"#autolayout-이용\" href=\"#autolayout-이용\"></a></h2>\n<p>구현해야할 사항은 아래와 같다.</p>\n<p><img src=\"image/scroll6.png\" alt=\"\" class=\"φcx\"></p>\n<p>이런 식으로 아래로 스크롤 되어야 한다!</p>\n<h3 id=\"1.선언-1\">1.선언<a title=\"#1.선언-1\" href=\"#1.선언-1\"></a></h3>\n","prev":{"title":"[swift]UIScrollView 만들기","link":"2020/07/20/swift-UIScrollView-만들기"},"next":{"title":"[Swift]NavigationBar 생략","link":"2020/07/20/Swift-네이베이션-바-생략"},"plink":"https://Qussk.github.io/2020/07/20/swift-UIScrollView-만들기/","toc":[{"id":"frame-이용","title":"frame 이용","index":"1","children":[{"id":"주의점.","title":"주의점.","index":"1.1"},{"id":"1.선언","title":"1.선언","index":"1.2"},{"id":"2.frame잡기","title":"2.frame잡기","index":"1.3"}]},{"id":"autolayout-이용","title":"autoLayout 이용","index":"2","children":[{"id":"1.선언-1","title":"1.선언","index":"2.1"}]}]}